<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/6/2022 10:28:24 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SWIFT3"
  DTS:CreatorName="SWIFT3\zinyk"
  DTS:DTSID="{C1C4F31D-0005-4665-8475-4140DF91275F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5467.0"
  DTS:LocaleID="1049"
  DTS:ObjectName="Incremental load Test"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="460"
  DTS:VersionGUID="{C7A63A67-7397-45BA-8CFB-05EA828D078E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Logs"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Записывает элементы журнала для событий в базу данных SQL Server"
      DTS:DTSID="{A8C9FA55-1950-4680-A77F-EF2C9A9DDC3C}"
      DTS:ObjectName="Регистратор служб SSIS для SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{173E8EB8-CB8C-480B-8C1F-88853CC446A6}"
      DTS:ObjectName="Configuration">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Debug</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC93B553-1507-49F2-8B7C-E995D8057162}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LineageKey"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3FA4683-CFFC-4342-A866-CD8882942DE4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LoadDateIncrementalEnd"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">1/3/1998</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C6ABE905-D25D-4C20-B802-D70E7AA8C000}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LoadDateInitialEnd"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">12/31/1997</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{51AE83DC-9B69-4C25-B9D4-64BA46033972}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ExternalFilesPath]+&quot;logs\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogsPath"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\zinyk\source\repos\Northwind_BI_Solution\logs\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{824AB4AA-0B41-42C0-BBDC-805A2A0430CF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_CutoffTime"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,12,DiagnosticEx</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{A8C9FA55-1950-4680-A77F-EF2C9A9DDC3C}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Logman Start"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:Disabled="True"
      DTS:DTSID="{d643eee3-1d30-47ac-9388-f5e98fea2ec6}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Logman Start"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="%SystemRoot%\System32\logman.exe"
          Arguments="start &quot;SQL Server&quot;" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Logman Stop"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:Disabled="True"
      DTS:DTSID="{ffbaef5d-f06c-46d5-a1c6-7b053a137d15}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Logman Stop"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="%SystemRoot%\System32\logman.exe"
          Arguments="stop &quot;SQL Server&quot;" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pre-test"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Контейнер последовательности"
      DTS:DTSID="{65868300-46FB-4F60-BF5F-C1C8DF6D4D4B}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Pre-test">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Pre-test\Clean up backups"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DTSID="{3f50b46d-8a1e-4e83-b297-36f63f006181}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean up backups"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteDirectoryContent"
              TaskSourcePath="$Project::BackupFilesPath"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Pre-test\Clean up logs"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DTSID="{32f4fd47-c406-48b6-958c-2548f6d2c88c}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean up logs"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteDirectoryContent"
              TaskSourcePath="User::LogsPath"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Pre-test\Maintence Subsystems"
          DTS:CreationName="Microsoft.DbMaintenanceExecuteAgentJobTask"
          DTS:Disabled="True"
          DTS:DTSID="{46d30441-dbc2-48bb-9a5d-30c29cccd6f4}"
          DTS:ExecutableType="Microsoft.DbMaintenanceExecuteAgentJobTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Maintence Subsystems"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{EEF7B69D-5582-443F-9879-F2A3F89FA203}"
              SQLTask:ServerVersion="9"
              SQLTask:ExtendedLogging="True"
              SQLTask:LocalConnectionForLogging=""
              SQLTask:TaskName=""
              SQLTask:IgnoreDatabasesInNotOnlineState="False"
              SQLTask:AgentJobID="NorthwindBI.Maintence Subsystems" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Pre-test\PreTest"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:DTSID="{BF473DE8-3FCD-424D-BE66-E8A53BD7F7BE}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="PreTest"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>PreTest.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>LoadDateIncrementalEnd</ParameterName>
                <BindedVariableOrParameterName>User::LoadDateIncrementalEnd</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>LoadDateInitialEnd</ParameterName>
                <BindedVariableOrParameterName>User::LoadDateInitialEnd</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Test"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DTSID="{c6a0a61f-a6bc-4584-9466-0cf3bf825cb5}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Test">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Test\Crash and Restore DWH"
          DTS:CreationName="Microsoft.DbMaintenanceTSQLExecuteTask"
          DTS:Description="Задача &quot;Выполнение инструкции T-SQL&quot;"
          DTS:Disabled="True"
          DTS:DTSID="{0067baf5-e56c-4f16-a793-3f81e848a911}"
          DTS:ExecutableType="Microsoft.DbMaintenanceTSQLExecuteTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Crash and Restore DWH"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FE074E8B-01EB-4612-9FDE-8732194F562A}"
              SQLTask:SqlStatementSource="USE [master];&#xA;GO&#xA;ALTER DATABASE [NorthwindDW] SET SINGLE_USER WITH ROLLBACK IMMEDIATE&#xA;PRINT N'NorthwindDW setted in SINGLE_USER mode';&#xA;GO&#xA;&#xA;IF EXISTS ( SELECT 1 FROM [sys].[databases] WHERE [name] = N'NorthwindDW' )&#xA; BEGIN&#xA;  DROP DATABASE [NorthwindDW]&#xA;  PRINT N'NorthwindDW dropped'&#xA; END;&#xA;GO&#xA;&#xA;USE [NorthwindLogs];&#xA;GO&#xA;DECLARE @IsReadOnly AS BIT;&#xA;DECLARE @BackupFileName AS NVARCHAR(500);&#xA;DECLARE @SQL AS NVARCHAR(1000);&#xA;DECLARE @GroupName AS NVARCHAR(100);&#xA;&#xA;SET @BackupFileName = (&#xA; SELECT  TOP(1) [BackupFileName]&#xA; FROM  [dbo].[DatabaseFiles]&#xA; WHERE  [BackupFileName] LIKE '%_FULL.bak'&#xA; ORDER BY [BackupFileName] DESC&#xA;) &#xA;SET @SQL = CONCAT (&#xA;   N'USE [master]; RESTORE DATABASE [NorthwindDW] READ_WRITE_FILEGROUPS FROM DISK = '''&#xA; , @BackupFileName&#xA; , N''' WITH PARTIAL, NORECOVERY;'&#xA;)&#xA;&#xA;EXECUTE sp_executesql @SQL&#xA;      &#xA;SET @BackupFileName = (&#xA; SELECT  TOP(1) [BackupFileName]&#xA; FROM  [dbo].[DatabaseFiles]&#xA; WHERE  [BackupFileName] LIKE '%_DIFF.bak' &#xA; ORDER BY [BackupFileName] DESC&#xA;)&#xA;SET @SQL = CONCAT (&#xA;   N'USE [master]; RESTORE DATABASE [NorthwindDW] READ_WRITE_FILEGROUPS FROM DISK = '''&#xA; , @BackupFileName&#xA; , N''' WITH NORECOVERY;'&#xA;)&#xA;&#xA;EXECUTE sp_executesql @SQL&#xA;   &#xA;SET @SQL = N'USE [master]; RESTORE DATABASE [NorthwindDW] WITH RECOVERY;'&#xA;EXECUTE sp_executesql @SQL&#xA;&#xA;DECLARE RestoreDWH CURSOR FOR &#xA; SELECT  [BackupFileName]&#xA; FROM  [dbo].[DatabaseFiles]&#xA; WHERE  [IsReadOnly] = 1&#xA; ORDER BY [BackupFileName] ASC&#xA;&#xA;OPEN RestoreDWH&#xA; FETCH NEXT FROM RestoreDWH INTO @BackupFileName&#xA; WHILE @@FETCH_STATUS = 0&#xA;  BEGIN&#xA;   SET @GroupName = (&#xA;    SELECT [GroupName]&#xA;    FROM [dbo].[DatabaseFiles]&#xA;    WHERE [BackupFileName] = @BackupFileName&#xA;   )&#xA;&#xA;   SET @SQL = CONCAT (&#xA;     N'USE [master]; RESTORE DATABASE [NorthwindDW] FILEGROUP = '''&#xA;    , @GroupName&#xA;    , N''' FROM DISK = '''&#xA;    , @BackupFileName&#xA;    , N''' WITH RECOVERY;'&#xA;   )&#xA;&#xA;   EXECUTE sp_executesql @SQL&#xA;   &#xA;   FETCH NEXT FROM RestoreDWH INTO @BackupFileName&#xA;  END&#xA;CLOSE RestoreDWH&#xA;DEALLOCATE RestoreDWH;&#xA;GO"
              SQLTask:ServerVersion="9"
              SQLTask:ExtendedLogging="True"
              SQLTask:LocalConnectionForLogging=""
              SQLTask:TaskName=""
              SQLTask:IgnoreDatabasesInNotOnlineState="False" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Test\Incremental load immitation"
          DTS:AssignExpression="@var_CutoffTime = DATEADD(&quot;day&quot;, 1, @var_CutoffTime)"
          DTS:CreationName="STOCK:FORLOOP"
          DTS:DTSID="{91bc0c26-1f57-4d61-b66f-0a8c8395b77d}"
          DTS:EvalExpression="@var_CutoffTime &lt;= (DT_DATE)&quot;1998-1-3&quot;"
          DTS:ExecutableType="STOCK:FORLOOP"
          DTS:FailPackageOnFailure="True"
          DTS:InitExpression="@var_CutoffTime = (DT_DATE)&quot;1998-1-1&quot;"
          DTS:LocaleID="-1"
          DTS:MaxConcurrent="1"
          DTS:ObjectName="Incremental load immitation">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="EvalExpression">"@var_CutoffTime &lt;= (DT_DATE)\"" + (DT_WSTR, 4) YEAR( @[User::LoadDateIncrementalEnd] ) + "-" + (DT_WSTR, 2) MONTH( @[User::LoadDateIncrementalEnd] ) + "-" + (DT_WSTR, 2) DAY( @[User::LoadDateIncrementalEnd] ) + "\""</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="InitExpression">"@var_CutoffTime = (DT_DATE)\"" + (DT_WSTR, 4) YEAR( DATEADD( "dd", 1, @[User::LoadDateInitialEnd]   )  ) + "-" + (DT_WSTR, 2) MONTH( DATEADD( "dd", 1, @[User::LoadDateInitialEnd]  )  ) + "-" + (DT_WSTR, 2) DAY( DATEADD( "dd", 1, @[User::LoadDateInitialEnd]  )  ) + "\""</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\CustomerSCD2TestStage1"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{d01f78cd-e24c-4d01-822a-3e856c392cf5}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="CustomerSCD2TestStage1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_e9dd87f2f0554a699548fdaf70cd1380"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Package::Configuration,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_e9dd87f2f0554a699548fdaf70cd1380.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace>
    <AssemblyName>ST_e9dd87f2f0554a699548fdaf70cd1380</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string Configuration = (string)Dts.Variables["$Package::Configuration"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            string Arguments = String.Empty;
            
            if (Configuration == "Debug")
            {
                Arguments = $"\"{ExternalFiles}NorthwindETLTest\\bin\\Debug\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            if (Configuration == "Release")
            {
                Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            
            if (String.IsNullOrEmpty(Arguments)) { Dts.Events.FireError(18, $"{TestName}", $"Не корректно заданы аргументы теста", String.Empty, 0); }
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = Arguments;
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (ErrorOutput != "")
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:DisplayName>
    <msb:ProjectId>{58F26C96-7609-4E9F-9C7F-ADBFB3CF802F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e9dd87f2f0554a699548fdaf70cd1380.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_e9dd87f2f0554a699548fdaf70cd1380.dll">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
GQAbBQoAKQAbBRAAMQAbBRAAOQAbBRAAQQAbBRAASQAbBRAAUQAbBRAAWQAbBRAAYQAbBRAAaQAb
BQYAgQAbBQYAqQAbBRUAuQAbBQYAwQCmACUAcQAUBioAyQDtBS8A0QACBDQA2QA5AzoA4QDMBj4A
4QCqBkEA4QBDBkcA4QDEBk8AyQA4BlQA6QARBVkA8QAbBQYA8QCGBGIA4QBDBmcA+QDhABAA+QAq
BhAA+QAlA20A+QCCBm0A+QD3BG0A8QBpBnIA8QDlBHYACQGMAHwA8QBvBnYA4QC2BkEA4QBDBoAA
6QAuBIcAcQAbBQYAiQAbBQYAEQHPAJIAEQGdBpsAkQAbBaEAsQAbBQYACAAUALsACAAYAMAAKQBz
ACgBLgALAAABLgATAAkBLgAbACgBLgAjADEBLgArAFoBLgAzAFoBLgA7AFoBLgBDADEBLgBLAGAB
LgBTAFoBLgBbAHcBQwBjAMAASQBzACgBYQB7AMAAYwBrAMAAGwADAAEABAADAAAAwQTxAAAAOwH2
AAAAVQb7AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAuiK0iwAAAAAAAAEAAAAEAAAA
AAAAAAAAAACpAIMAAAAAAA8AAAAAAAAAAAAAALIAagMAAAAABAAAAAAAAAAAAAAAqQALBAAAAAAP
AAAAAAAAAAAAAACyAFwAAAAAAAAAAAABAAAAbAUAAAUAAgAAAAAAAFNUX2U5ZGQ4N2YyZjA1NTRh
Njk5NTQ4ZmRhZjcwY2QxMzgwAFNUX2E5MDg4MjdlZmYyYzQzMWZiMzRmNDE0MGY0YmRmYzIzADxN
b2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBt
c2NvcmxpYgBSZWFkVG9FbmQAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVs
bEV4ZWN1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5n
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF9lOWRkODdmMmYwNTU0YTY5OTU0OGZkYWY3MGNkMTM4MC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8A
Z2V0X1N0YXJ0SW5mbwBQcm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBz
ZXRfUmVkaXJlY3RTdGFuZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRi
ZGZjMjMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBn
ZXRfRHRzAFNjcmlwdFJlc3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmpl
Y3QAZ2V0X0RlZmF1bHQARW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9S
ZWRpcmVjdFN0YW5kYXJkT3V0cHV0AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFs
aXR5AElzTnVsbE9yRW1wdHkAAAAAI1AAcgBvAGcAcgBhAG0ARgBpAGwAZQBzACgAeAA4ADYAKQAA
NyQAUAByAG8AagBlAGMAdAA6ADoARQB4AHQAZQByAG4AYQBsAEYAaQBsAGUAcwBQAGEAdABoAAAv
JABQAGEAYwBrAGEAZwBlADoAOgBDAG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuAAAhUwB5AHMAdABl
AG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAC0QAZQBiAHUAZwAAAyIAAHFOAG8AcgB0AGgAdwBpAG4A
ZABFAFQATABUAGUAcwB0AFwAYgBpAG4AXABEAGUAYgB1AGcAXABOAG8AcgB0AGgAdwBpAG4AZABF
AFQATABUAGUAcwB0AC4AZABsAGwAIgAgAC8AVABlAHMAdABzADoAAA9SAGUAbABlAGEAcwBlAABX
VABlAHMAdABMAGkAYgByAGEAcgBpAGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBz
AHQALgBkAGwAbAAiACAALwBUAGUAcwB0AHMAOgAAAQBHHQQ1BCAAOgQ+BEAEQAQ1BDoEQgQ9BD4E
IAA3BDAENAQwBD0ESwQgADAEQAQzBEMEPAQ1BD0EQgRLBCAAQgQ1BEEEQgQwBAGA2VwATQBpAGMA
cgBvAHMAbwBmAHQAIABWAGkAcwB1AGEAbAAgAFMAdAB1AGQAaQBvAFwAMgAwADEAOQBcAEMAbwBt
AG0AdQBuAGkAdAB5AFwAQwBvAG0AbQBvAG4ANwBcAEkARABFAFwAQwBvAG0AbQBvAG4ARQB4AHQA
ZQBuAHMAaQBvAG4AcwBcAE0AaQBjAHIAbwBzAG8AZgB0AFwAVABlAHMAdABXAGkAbgBkAG8AdwBc
AFYAUwBUAGUAcwB0AC4AQwBvAG4AcwBvAGwAZQAuAGUAeABlAAAFDQAKAABxUwBUAF8AYQA5ADAA
OAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBiADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAz
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAndda8lewZOnhIA
07iBNh8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEJBwcODg4ODg4CBAABDg4EIAASZQQgABJp
BSABEm0cAyAAHAIGDgUAAgIODgcABA4ODg4OBAABAg4EIAASdQggBQIIDg4OCAQgABJ9BQACDg4O
BCABAQIDIAACBSAAEoCBAyAADgYAAw4ODg4KIAYBCA4ODggQAggAARKAiRGAjQUgABKAkQcgAgEO
EoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQA
ABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBm
NGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAINAAAAAAAAAAAAAAiNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDQA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQC0i7oiAAABALSLuiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAwAGYA
NABiAGQAZgBjADIAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADgAOQAwAC4AMwA1ADcANgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGUAOQBkAGQAOAA3AGYAMgBmADAANQA1ADQAYQA2ADkAOQA1ADQAOABmAGQAYQBmADcAMABj
AGQAMQAzADgAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZQA5AGQAZAA4ADcAZgAyAGYAMAA1ADUANABhADYAOQA5ADUANAA4AGYAZABh
AGYANwAwAGMAZAAxADMAOAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAw
AGYANABiAGQAZgBjADIAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA0NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\EmployeeSCD2TestStage1"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{f78de93d-19f9-4827-a292-b84aad0af39c}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EmployeeSCD2TestStage1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_9c82864d479846528765a8776babb7b4"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Package::Configuration,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string Configuration = (string)Dts.Variables["$Package::Configuration"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            string Arguments = String.Empty;
            
            if (Configuration == "Debug")
            {
                Arguments = $"\"{ExternalFiles}NorthwindETLTest\\bin\\Debug\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            if (Configuration == "Release")
            {
                Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            
            if (String.IsNullOrEmpty(Arguments)) { Dts.Events.FireError(18, $"{TestName}", $"Не корректно заданы аргументы теста", String.Empty, 0); }
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = Arguments;
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (ErrorOutput != "")
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_9c82864d479846528765a8776babb7b4.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace><AssemblyName>ST_9c82864d479846528765a8776babb7b4</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:DisplayName>
    <msb:ProjectId>{58F26C96-7609-4E9F-9C7F-ADBFB3CF802F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9c82864d479846528765a8776babb7b4.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_e9dd87f2f0554a699548fdaf70cd1380.dll">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
GQAbBQoAKQAbBRAAMQAbBRAAOQAbBRAAQQAbBRAASQAbBRAAUQAbBRAAWQAbBRAAYQAbBRAAaQAb
BQYAgQAbBQYAqQAbBRUAuQAbBQYAwQCmACUAcQAUBioAyQDtBS8A0QACBDQA2QA5AzoA4QDMBj4A
4QCqBkEA4QBDBkcA4QDEBk8AyQA4BlQA6QARBVkA8QAbBQYA8QCGBGIA4QBDBmcA+QDhABAA+QAq
BhAA+QAlA20A+QCCBm0A+QD3BG0A8QBpBnIA8QDlBHYACQGMAHwA8QBvBnYA4QC2BkEA4QBDBoAA
6QAuBIcAcQAbBQYAiQAbBQYAEQHPAJIAEQGdBpsAkQAbBaEAsQAbBQYACAAUALsACAAYAMAAKQBz
ACgBLgALAAABLgATAAkBLgAbACgBLgAjADEBLgArAFoBLgAzAFoBLgA7AFoBLgBDADEBLgBLAGAB
LgBTAFoBLgBbAHcBQwBjAMAASQBzACgBYQB7AMAAYwBrAMAAGwADAAEABAADAAAAwQTxAAAAOwH2
AAAAVQb7AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAuiK0iwAAAAAAAAEAAAAEAAAA
AAAAAAAAAACpAIMAAAAAAA8AAAAAAAAAAAAAALIAagMAAAAABAAAAAAAAAAAAAAAqQALBAAAAAAP
AAAAAAAAAAAAAACyAFwAAAAAAAAAAAABAAAAbAUAAAUAAgAAAAAAAFNUX2U5ZGQ4N2YyZjA1NTRh
Njk5NTQ4ZmRhZjcwY2QxMzgwAFNUX2E5MDg4MjdlZmYyYzQzMWZiMzRmNDE0MGY0YmRmYzIzADxN
b2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBt
c2NvcmxpYgBSZWFkVG9FbmQAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVs
bEV4ZWN1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5n
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF9lOWRkODdmMmYwNTU0YTY5OTU0OGZkYWY3MGNkMTM4MC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8A
Z2V0X1N0YXJ0SW5mbwBQcm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBz
ZXRfUmVkaXJlY3RTdGFuZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRi
ZGZjMjMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBn
ZXRfRHRzAFNjcmlwdFJlc3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmpl
Y3QAZ2V0X0RlZmF1bHQARW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9S
ZWRpcmVjdFN0YW5kYXJkT3V0cHV0AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFs
aXR5AElzTnVsbE9yRW1wdHkAAAAAI1AAcgBvAGcAcgBhAG0ARgBpAGwAZQBzACgAeAA4ADYAKQAA
NyQAUAByAG8AagBlAGMAdAA6ADoARQB4AHQAZQByAG4AYQBsAEYAaQBsAGUAcwBQAGEAdABoAAAv
JABQAGEAYwBrAGEAZwBlADoAOgBDAG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuAAAhUwB5AHMAdABl
AG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAC0QAZQBiAHUAZwAAAyIAAHFOAG8AcgB0AGgAdwBpAG4A
ZABFAFQATABUAGUAcwB0AFwAYgBpAG4AXABEAGUAYgB1AGcAXABOAG8AcgB0AGgAdwBpAG4AZABF
AFQATABUAGUAcwB0AC4AZABsAGwAIgAgAC8AVABlAHMAdABzADoAAA9SAGUAbABlAGEAcwBlAABX
VABlAHMAdABMAGkAYgByAGEAcgBpAGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBz
AHQALgBkAGwAbAAiACAALwBUAGUAcwB0AHMAOgAAAQBHHQQ1BCAAOgQ+BEAEQAQ1BDoEQgQ9BD4E
IAA3BDAENAQwBD0ESwQgADAEQAQzBEMEPAQ1BD0EQgRLBCAAQgQ1BEEEQgQwBAGA2VwATQBpAGMA
cgBvAHMAbwBmAHQAIABWAGkAcwB1AGEAbAAgAFMAdAB1AGQAaQBvAFwAMgAwADEAOQBcAEMAbwBt
AG0AdQBuAGkAdAB5AFwAQwBvAG0AbQBvAG4ANwBcAEkARABFAFwAQwBvAG0AbQBvAG4ARQB4AHQA
ZQBuAHMAaQBvAG4AcwBcAE0AaQBjAHIAbwBzAG8AZgB0AFwAVABlAHMAdABXAGkAbgBkAG8AdwBc
AFYAUwBUAGUAcwB0AC4AQwBvAG4AcwBvAGwAZQAuAGUAeABlAAAFDQAKAABxUwBUAF8AYQA5ADAA
OAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBiADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAz
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAndda8lewZOnhIA
07iBNh8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEJBwcODg4ODg4CBAABDg4EIAASZQQgABJp
BSABEm0cAyAAHAIGDgUAAgIODgcABA4ODg4OBAABAg4EIAASdQggBQIIDg4OCAQgABJ9BQACDg4O
BCABAQIDIAACBSAAEoCBAyAADgYAAw4ODg4KIAYBCA4ODggQAggAARKAiRGAjQUgABKAkQcgAgEO
EoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQA
ABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBm
NGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAINAAAAAAAAAAAAAAiNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDQA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQC0i7oiAAABALSLuiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAwAGYA
NABiAGQAZgBjADIAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADgAOQAwAC4AMwA1ADcANgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGUAOQBkAGQAOAA3AGYAMgBmADAANQA1ADQAYQA2ADkAOQA1ADQAOABmAGQAYQBmADcAMABj
AGQAMQAzADgAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZQA5AGQAZAA4ADcAZgAyAGYAMAA1ADUANABhADYAOQA5ADUANAA4AGYAZABh
AGYANwAwAGMAZAAxADMAOAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAw
AGYANABiAGQAZgBjADIAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA0NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\EmployeeSCD2TestStage2"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{3bf1c217-3d1a-47c0-a1b3-f4944fb2e81f}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EmployeeSCD2TestStage2"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_ee04c5f997de4dc48683fdde411482b8"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Package::Configuration,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_ee04c5f997de4dc48683fdde411482b8.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace><AssemblyName>ST_ee04c5f997de4dc48683fdde411482b8</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string Configuration = (string)Dts.Variables["$Package::Configuration"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            string Arguments = String.Empty;
            
            if (Configuration == "Debug")
            {
                Arguments = $"\"{ExternalFiles}NorthwindETLTest\\bin\\Debug\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            if (Configuration == "Release")
            {
                Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            
            if (String.IsNullOrEmpty(Arguments)) { Dts.Events.FireError(18, $"{TestName}", $"Не корректно заданы аргументы теста", String.Empty, 0); }
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = Arguments;
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (ErrorOutput != "")
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:DisplayName>
    <msb:ProjectId>{58F26C96-7609-4E9F-9C7F-ADBFB3CF802F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ee04c5f997de4dc48683fdde411482b8.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_e9dd87f2f0554a699548fdaf70cd1380.dll">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
GQAbBQoAKQAbBRAAMQAbBRAAOQAbBRAAQQAbBRAASQAbBRAAUQAbBRAAWQAbBRAAYQAbBRAAaQAb
BQYAgQAbBQYAqQAbBRUAuQAbBQYAwQCmACUAcQAUBioAyQDtBS8A0QACBDQA2QA5AzoA4QDMBj4A
4QCqBkEA4QBDBkcA4QDEBk8AyQA4BlQA6QARBVkA8QAbBQYA8QCGBGIA4QBDBmcA+QDhABAA+QAq
BhAA+QAlA20A+QCCBm0A+QD3BG0A8QBpBnIA8QDlBHYACQGMAHwA8QBvBnYA4QC2BkEA4QBDBoAA
6QAuBIcAcQAbBQYAiQAbBQYAEQHPAJIAEQGdBpsAkQAbBaEAsQAbBQYACAAUALsACAAYAMAAKQBz
ACgBLgALAAABLgATAAkBLgAbACgBLgAjADEBLgArAFoBLgAzAFoBLgA7AFoBLgBDADEBLgBLAGAB
LgBTAFoBLgBbAHcBQwBjAMAASQBzACgBYQB7AMAAYwBrAMAAGwADAAEABAADAAAAwQTxAAAAOwH2
AAAAVQb7AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAuiK0iwAAAAAAAAEAAAAEAAAA
AAAAAAAAAACpAIMAAAAAAA8AAAAAAAAAAAAAALIAagMAAAAABAAAAAAAAAAAAAAAqQALBAAAAAAP
AAAAAAAAAAAAAACyAFwAAAAAAAAAAAABAAAAbAUAAAUAAgAAAAAAAFNUX2U5ZGQ4N2YyZjA1NTRh
Njk5NTQ4ZmRhZjcwY2QxMzgwAFNUX2E5MDg4MjdlZmYyYzQzMWZiMzRmNDE0MGY0YmRmYzIzADxN
b2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBt
c2NvcmxpYgBSZWFkVG9FbmQAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVs
bEV4ZWN1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5n
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF9lOWRkODdmMmYwNTU0YTY5OTU0OGZkYWY3MGNkMTM4MC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8A
Z2V0X1N0YXJ0SW5mbwBQcm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBz
ZXRfUmVkaXJlY3RTdGFuZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRi
ZGZjMjMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBn
ZXRfRHRzAFNjcmlwdFJlc3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmpl
Y3QAZ2V0X0RlZmF1bHQARW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9S
ZWRpcmVjdFN0YW5kYXJkT3V0cHV0AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFs
aXR5AElzTnVsbE9yRW1wdHkAAAAAI1AAcgBvAGcAcgBhAG0ARgBpAGwAZQBzACgAeAA4ADYAKQAA
NyQAUAByAG8AagBlAGMAdAA6ADoARQB4AHQAZQByAG4AYQBsAEYAaQBsAGUAcwBQAGEAdABoAAAv
JABQAGEAYwBrAGEAZwBlADoAOgBDAG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuAAAhUwB5AHMAdABl
AG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAC0QAZQBiAHUAZwAAAyIAAHFOAG8AcgB0AGgAdwBpAG4A
ZABFAFQATABUAGUAcwB0AFwAYgBpAG4AXABEAGUAYgB1AGcAXABOAG8AcgB0AGgAdwBpAG4AZABF
AFQATABUAGUAcwB0AC4AZABsAGwAIgAgAC8AVABlAHMAdABzADoAAA9SAGUAbABlAGEAcwBlAABX
VABlAHMAdABMAGkAYgByAGEAcgBpAGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBz
AHQALgBkAGwAbAAiACAALwBUAGUAcwB0AHMAOgAAAQBHHQQ1BCAAOgQ+BEAEQAQ1BDoEQgQ9BD4E
IAA3BDAENAQwBD0ESwQgADAEQAQzBEMEPAQ1BD0EQgRLBCAAQgQ1BEEEQgQwBAGA2VwATQBpAGMA
cgBvAHMAbwBmAHQAIABWAGkAcwB1AGEAbAAgAFMAdAB1AGQAaQBvAFwAMgAwADEAOQBcAEMAbwBt
AG0AdQBuAGkAdAB5AFwAQwBvAG0AbQBvAG4ANwBcAEkARABFAFwAQwBvAG0AbQBvAG4ARQB4AHQA
ZQBuAHMAaQBvAG4AcwBcAE0AaQBjAHIAbwBzAG8AZgB0AFwAVABlAHMAdABXAGkAbgBkAG8AdwBc
AFYAUwBUAGUAcwB0AC4AQwBvAG4AcwBvAGwAZQAuAGUAeABlAAAFDQAKAABxUwBUAF8AYQA5ADAA
OAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBiADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAz
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAndda8lewZOnhIA
07iBNh8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEJBwcODg4ODg4CBAABDg4EIAASZQQgABJp
BSABEm0cAyAAHAIGDgUAAgIODgcABA4ODg4OBAABAg4EIAASdQggBQIIDg4OCAQgABJ9BQACDg4O
BCABAQIDIAACBSAAEoCBAyAADgYAAw4ODg4KIAYBCA4ODggQAggAARKAiRGAjQUgABKAkQcgAgEO
EoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQA
ABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBm
NGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAINAAAAAAAAAAAAAAiNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDQA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQC0i7oiAAABALSLuiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAwAGYA
NABiAGQAZgBjADIAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADgAOQAwAC4AMwA1ADcANgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGUAOQBkAGQAOAA3AGYAMgBmADAANQA1ADQAYQA2ADkAOQA1ADQAOABmAGQAYQBmADcAMABj
AGQAMQAzADgAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZQA5AGQAZAA4ADcAZgAyAGYAMAA1ADUANABhADYAOQA5ADUANAA4AGYAZABh
AGYANwAwAGMAZAAxADMAOAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAw
AGYANABiAGQAZgBjADIAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA0NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\Incremental load"
              DTS:CreationName="Microsoft.ExecutePackageTask"
              DTS:DTSID="{4d264142-23b8-4cb4-9790-37298c252431}"
              DTS:ExecutableType="Microsoft.ExecutePackageTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Incremental load"
              DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ExecutePackageTask>
                  <UseProjectReference>True</UseProjectReference>
                  <PackageName>Incremental load.dtsx</PackageName>
                  <ParameterAssignment>
                    <ParameterName>CutoffTime</ParameterName>
                    <BindedVariableOrParameterName>User::var_CutoffTime</BindedVariableOrParameterName>
                  </ParameterAssignment>
                  <ParameterAssignment>
                    <ParameterName>LoadDateInitialEnd</ParameterName>
                    <BindedVariableOrParameterName>User::LoadDateInitialEnd</BindedVariableOrParameterName>
                  </ParameterAssignment>
                </ExecutePackageTask>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\ProductSCD1TestStage1"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{550b8204-2ee3-4279-b01b-a2480929baa8}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="ProductSCD1TestStage1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_b7efed13c8624e00b6e24639ff9071b4"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Package::Configuration,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string Configuration = (string)Dts.Variables["$Package::Configuration"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            string Arguments = String.Empty;
            
            if (Configuration == "Debug")
            {
                Arguments = $"\"{ExternalFiles}NorthwindETLTest\\bin\\Debug\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            if (Configuration == "Release")
            {
                Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            
            if (String.IsNullOrEmpty(Arguments)) { Dts.Events.FireError(18, $"{TestName}", $"Не корректно заданы аргументы теста", String.Empty, 0); }
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = Arguments;
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (ErrorOutput != "")
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_b7efed13c8624e00b6e24639ff9071b4.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace><AssemblyName>ST_b7efed13c8624e00b6e24639ff9071b4</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:DisplayName>
    <msb:ProjectId>{58F26C96-7609-4E9F-9C7F-ADBFB3CF802F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b7efed13c8624e00b6e24639ff9071b4.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_e9dd87f2f0554a699548fdaf70cd1380.dll">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
GQAbBQoAKQAbBRAAMQAbBRAAOQAbBRAAQQAbBRAASQAbBRAAUQAbBRAAWQAbBRAAYQAbBRAAaQAb
BQYAgQAbBQYAqQAbBRUAuQAbBQYAwQCmACUAcQAUBioAyQDtBS8A0QACBDQA2QA5AzoA4QDMBj4A
4QCqBkEA4QBDBkcA4QDEBk8AyQA4BlQA6QARBVkA8QAbBQYA8QCGBGIA4QBDBmcA+QDhABAA+QAq
BhAA+QAlA20A+QCCBm0A+QD3BG0A8QBpBnIA8QDlBHYACQGMAHwA8QBvBnYA4QC2BkEA4QBDBoAA
6QAuBIcAcQAbBQYAiQAbBQYAEQHPAJIAEQGdBpsAkQAbBaEAsQAbBQYACAAUALsACAAYAMAAKQBz
ACgBLgALAAABLgATAAkBLgAbACgBLgAjADEBLgArAFoBLgAzAFoBLgA7AFoBLgBDADEBLgBLAGAB
LgBTAFoBLgBbAHcBQwBjAMAASQBzACgBYQB7AMAAYwBrAMAAGwADAAEABAADAAAAwQTxAAAAOwH2
AAAAVQb7AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAuiK0iwAAAAAAAAEAAAAEAAAA
AAAAAAAAAACpAIMAAAAAAA8AAAAAAAAAAAAAALIAagMAAAAABAAAAAAAAAAAAAAAqQALBAAAAAAP
AAAAAAAAAAAAAACyAFwAAAAAAAAAAAABAAAAbAUAAAUAAgAAAAAAAFNUX2U5ZGQ4N2YyZjA1NTRh
Njk5NTQ4ZmRhZjcwY2QxMzgwAFNUX2E5MDg4MjdlZmYyYzQzMWZiMzRmNDE0MGY0YmRmYzIzADxN
b2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBt
c2NvcmxpYgBSZWFkVG9FbmQAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVs
bEV4ZWN1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5n
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF9lOWRkODdmMmYwNTU0YTY5OTU0OGZkYWY3MGNkMTM4MC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8A
Z2V0X1N0YXJ0SW5mbwBQcm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBz
ZXRfUmVkaXJlY3RTdGFuZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRi
ZGZjMjMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBn
ZXRfRHRzAFNjcmlwdFJlc3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmpl
Y3QAZ2V0X0RlZmF1bHQARW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9S
ZWRpcmVjdFN0YW5kYXJkT3V0cHV0AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFs
aXR5AElzTnVsbE9yRW1wdHkAAAAAI1AAcgBvAGcAcgBhAG0ARgBpAGwAZQBzACgAeAA4ADYAKQAA
NyQAUAByAG8AagBlAGMAdAA6ADoARQB4AHQAZQByAG4AYQBsAEYAaQBsAGUAcwBQAGEAdABoAAAv
JABQAGEAYwBrAGEAZwBlADoAOgBDAG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuAAAhUwB5AHMAdABl
AG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAC0QAZQBiAHUAZwAAAyIAAHFOAG8AcgB0AGgAdwBpAG4A
ZABFAFQATABUAGUAcwB0AFwAYgBpAG4AXABEAGUAYgB1AGcAXABOAG8AcgB0AGgAdwBpAG4AZABF
AFQATABUAGUAcwB0AC4AZABsAGwAIgAgAC8AVABlAHMAdABzADoAAA9SAGUAbABlAGEAcwBlAABX
VABlAHMAdABMAGkAYgByAGEAcgBpAGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBz
AHQALgBkAGwAbAAiACAALwBUAGUAcwB0AHMAOgAAAQBHHQQ1BCAAOgQ+BEAEQAQ1BDoEQgQ9BD4E
IAA3BDAENAQwBD0ESwQgADAEQAQzBEMEPAQ1BD0EQgRLBCAAQgQ1BEEEQgQwBAGA2VwATQBpAGMA
cgBvAHMAbwBmAHQAIABWAGkAcwB1AGEAbAAgAFMAdAB1AGQAaQBvAFwAMgAwADEAOQBcAEMAbwBt
AG0AdQBuAGkAdAB5AFwAQwBvAG0AbQBvAG4ANwBcAEkARABFAFwAQwBvAG0AbQBvAG4ARQB4AHQA
ZQBuAHMAaQBvAG4AcwBcAE0AaQBjAHIAbwBzAG8AZgB0AFwAVABlAHMAdABXAGkAbgBkAG8AdwBc
AFYAUwBUAGUAcwB0AC4AQwBvAG4AcwBvAGwAZQAuAGUAeABlAAAFDQAKAABxUwBUAF8AYQA5ADAA
OAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBiADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAz
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAndda8lewZOnhIA
07iBNh8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEJBwcODg4ODg4CBAABDg4EIAASZQQgABJp
BSABEm0cAyAAHAIGDgUAAgIODgcABA4ODg4OBAABAg4EIAASdQggBQIIDg4OCAQgABJ9BQACDg4O
BCABAQIDIAACBSAAEoCBAyAADgYAAw4ODg4KIAYBCA4ODggQAggAARKAiRGAjQUgABKAkQcgAgEO
EoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQA
ABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBm
NGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAINAAAAAAAAAAAAAAiNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDQA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQC0i7oiAAABALSLuiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAwAGYA
NABiAGQAZgBjADIAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADgAOQAwAC4AMwA1ADcANgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGUAOQBkAGQAOAA3AGYAMgBmADAANQA1ADQAYQA2ADkAOQA1ADQAOABmAGQAYQBmADcAMABj
AGQAMQAzADgAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZQA5AGQAZAA4ADcAZgAyAGYAMAA1ADUANABhADYAOQA5ADUANAA4AGYAZABh
AGYANwAwAGMAZAAxADMAOAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAw
AGYANABiAGQAZgBjADIAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA0NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\ProductSCD1TestStage2"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{5d848886-4890-4c1c-867b-7b1ea7b99c6d}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="ProductSCD1TestStage2"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c78c0b87f9a941e6b0290626d781f9e5"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Package::Configuration,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c78c0b87f9a941e6b0290626d781f9e5.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace><AssemblyName>ST_c78c0b87f9a941e6b0290626d781f9e5</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string Configuration = (string)Dts.Variables["$Package::Configuration"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            string Arguments = String.Empty;
            
            if (Configuration == "Debug")
            {
                Arguments = $"\"{ExternalFiles}NorthwindETLTest\\bin\\Debug\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            if (Configuration == "Release")
            {
                Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            }
            
            if (String.IsNullOrEmpty(Arguments)) { Dts.Events.FireError(18, $"{TestName}", $"Не корректно заданы аргументы теста", String.Empty, 0); }
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = Arguments;
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (ErrorOutput != "")
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:DisplayName>
    <msb:ProjectId>{58F26C96-7609-4E9F-9C7F-ADBFB3CF802F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c78c0b87f9a941e6b0290626d781f9e5.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_e9dd87f2f0554a699548fdaf70cd1380.dll">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
GQAbBQoAKQAbBRAAMQAbBRAAOQAbBRAAQQAbBRAASQAbBRAAUQAbBRAAWQAbBRAAYQAbBRAAaQAb
BQYAgQAbBQYAqQAbBRUAuQAbBQYAwQCmACUAcQAUBioAyQDtBS8A0QACBDQA2QA5AzoA4QDMBj4A
4QCqBkEA4QBDBkcA4QDEBk8AyQA4BlQA6QARBVkA8QAbBQYA8QCGBGIA4QBDBmcA+QDhABAA+QAq
BhAA+QAlA20A+QCCBm0A+QD3BG0A8QBpBnIA8QDlBHYACQGMAHwA8QBvBnYA4QC2BkEA4QBDBoAA
6QAuBIcAcQAbBQYAiQAbBQYAEQHPAJIAEQGdBpsAkQAbBaEAsQAbBQYACAAUALsACAAYAMAAKQBz
ACgBLgALAAABLgATAAkBLgAbACgBLgAjADEBLgArAFoBLgAzAFoBLgA7AFoBLgBDADEBLgBLAGAB
LgBTAFoBLgBbAHcBQwBjAMAASQBzACgBYQB7AMAAYwBrAMAAGwADAAEABAADAAAAwQTxAAAAOwH2
AAAAVQb7AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAuiK0iwAAAAAAAAEAAAAEAAAA
AAAAAAAAAACpAIMAAAAAAA8AAAAAAAAAAAAAALIAagMAAAAABAAAAAAAAAAAAAAAqQALBAAAAAAP
AAAAAAAAAAAAAACyAFwAAAAAAAAAAAABAAAAbAUAAAUAAgAAAAAAAFNUX2U5ZGQ4N2YyZjA1NTRh
Njk5NTQ4ZmRhZjcwY2QxMzgwAFNUX2E5MDg4MjdlZmYyYzQzMWZiMzRmNDE0MGY0YmRmYzIzADxN
b2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBt
c2NvcmxpYgBSZWFkVG9FbmQAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVs
bEV4ZWN1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5n
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF9lOWRkODdmMmYwNTU0YTY5OTU0OGZkYWY3MGNkMTM4MC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8A
Z2V0X1N0YXJ0SW5mbwBQcm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBz
ZXRfUmVkaXJlY3RTdGFuZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRi
ZGZjMjMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBn
ZXRfRHRzAFNjcmlwdFJlc3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmpl
Y3QAZ2V0X0RlZmF1bHQARW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9S
ZWRpcmVjdFN0YW5kYXJkT3V0cHV0AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFs
aXR5AElzTnVsbE9yRW1wdHkAAAAAI1AAcgBvAGcAcgBhAG0ARgBpAGwAZQBzACgAeAA4ADYAKQAA
NyQAUAByAG8AagBlAGMAdAA6ADoARQB4AHQAZQByAG4AYQBsAEYAaQBsAGUAcwBQAGEAdABoAAAv
JABQAGEAYwBrAGEAZwBlADoAOgBDAG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuAAAhUwB5AHMAdABl
AG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAC0QAZQBiAHUAZwAAAyIAAHFOAG8AcgB0AGgAdwBpAG4A
ZABFAFQATABUAGUAcwB0AFwAYgBpAG4AXABEAGUAYgB1AGcAXABOAG8AcgB0AGgAdwBpAG4AZABF
AFQATABUAGUAcwB0AC4AZABsAGwAIgAgAC8AVABlAHMAdABzADoAAA9SAGUAbABlAGEAcwBlAABX
VABlAHMAdABMAGkAYgByAGEAcgBpAGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBz
AHQALgBkAGwAbAAiACAALwBUAGUAcwB0AHMAOgAAAQBHHQQ1BCAAOgQ+BEAEQAQ1BDoEQgQ9BD4E
IAA3BDAENAQwBD0ESwQgADAEQAQzBEMEPAQ1BD0EQgRLBCAAQgQ1BEEEQgQwBAGA2VwATQBpAGMA
cgBvAHMAbwBmAHQAIABWAGkAcwB1AGEAbAAgAFMAdAB1AGQAaQBvAFwAMgAwADEAOQBcAEMAbwBt
AG0AdQBuAGkAdAB5AFwAQwBvAG0AbQBvAG4ANwBcAEkARABFAFwAQwBvAG0AbQBvAG4ARQB4AHQA
ZQBuAHMAaQBvAG4AcwBcAE0AaQBjAHIAbwBzAG8AZgB0AFwAVABlAHMAdABXAGkAbgBkAG8AdwBc
AFYAUwBUAGUAcwB0AC4AQwBvAG4AcwBvAGwAZQAuAGUAeABlAAAFDQAKAABxUwBUAF8AYQA5ADAA
OAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBiADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAz
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAndda8lewZOnhIA
07iBNh8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEJBwcODg4ODg4CBAABDg4EIAASZQQgABJp
BSABEm0cAyAAHAIGDgUAAgIODgcABA4ODg4OBAABAg4EIAASdQggBQIIDg4OCAQgABJ9BQACDg4O
BCABAQIDIAACBSAAEoCBAyAADgYAAw4ODg4KIAYBCA4ODggQAggAARKAiRGAjQUgABKAkQcgAgEO
EoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQA
ABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4ODI3ZWZmMmM0MzFmYjM0ZjQxNDBm
NGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAINAAAAAAAAAAAAAAiNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDQA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQC0i7oiAAABALSLuiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAwAGYA
NABiAGQAZgBjADIAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADgAOQAwAC4AMwA1ADcANgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGUAOQBkAGQAOAA3AGYAMgBmADAANQA1ADQAYQA2ADkAOQA1ADQAOABmAGQAYQBmADcAMABj
AGQAMQAzADgAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZQA5AGQAZAA4ADcAZgAyAGYAMAA1ADUANABhADYAOQA5ADUANAA4AGYAZABh
AGYANwAwAGMAZAAxADMAOAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEAOQAwADgAOAAyADcAZQBmAGYAMgBjADQAMwAxAGYAYgAzADQAZgA0ADEANAAw
AGYANABiAGQAZgBjADIAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADkAMAAuADMANQA3ADYANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA0NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение]"
              DTS:CreationName=""
              DTS:DTSID="{F250EACF-3C69-4A1B-9609-A869722E8180}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-3&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение"
              DTS:To="Package\Test\Incremental load immitation\CustomerSCD2TestStage1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 1]"
              DTS:CreationName=""
              DTS:DTSID="{09A4FA23-822E-40A8-8FE8-BED5C5684777}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-2&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение 1"
              DTS:To="Package\Test\Incremental load immitation\ProductSCD1TestStage1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 2]"
              DTS:CreationName=""
              DTS:DTSID="{0D74E7CD-3FB3-4031-A8E3-3EBBB6840D45}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-3&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение 2"
              DTS:To="Package\Test\Incremental load immitation\ProductSCD1TestStage2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 3]"
              DTS:CreationName=""
              DTS:DTSID="{64A457C3-5788-4B36-B7A8-2B42ED1FFB90}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-2&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение 3"
              DTS:To="Package\Test\Incremental load immitation\EmployeeSCD2TestStage1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 5]"
              DTS:CreationName=""
              DTS:DTSID="{54657E5C-7CB4-4BE6-A68C-7D63B6964CC9}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-3&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение 5"
              DTS:To="Package\Test\Incremental load immitation\EmployeeSCD2TestStage2" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Test\Ingest data"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Disabled="True"
          DTS:DTSID="{6bfb4787-13b0-42b5-854d-0153e1f6a624}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Ingest data">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Test\Ingest data\Northwind (упрощённая)"
              DTS:CreationName="Microsoft.ExecutePackageTask"
              DTS:DTSID="{bcecefc6-e96f-45e1-9276-b395c79660e6}"
              DTS:ExecutableType="Microsoft.ExecutePackageTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Northwind (упрощённая)"
              DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ExecutePackageTask>
                  <UseProjectReference>True</UseProjectReference>
                  <PackageName>Extract Northwind (упрощённая).dtsx</PackageName>
                </ExecutePackageTask>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Ingest data\xmlcalendar"
              DTS:CreationName="Microsoft.ExecutePackageTask"
              DTS:DTSID="{b0a6c72e-c378-4525-8b43-52eb9c4ad620}"
              DTS:ExecutableType="Microsoft.ExecutePackageTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="xmlcalendar"
              DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ExecutePackageTask>
                  <UseProjectReference>True</UseProjectReference>
                  <PackageName>Extract Xmlcalendar.dtsx</PackageName>
                  <ParameterAssignment>
                    <ParameterName>XMLCalendarFolder</ParameterName>
                    <BindedVariableOrParameterName>$Project::XMLCalendarFolder</BindedVariableOrParameterName>
                  </ParameterAssignment>
                </ExecutePackageTask>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Test\Initial load"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:DTSID="{da917f15-c113-49bc-a556-9a17f9f40087}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initial load"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Initial Load.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>CutoffTime</ParameterName>
                <BindedVariableOrParameterName>User::LoadDateInitialEnd</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>LoadDateInitialEnd</ParameterName>
                <BindedVariableOrParameterName>User::LoadDateInitialEnd</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Test.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{cb102e11-bb3f-4a0c-a9a3-e33ff1b77dd6}"
          DTS:From="Package\Test\Initial load"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Test\Incremental load immitation" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Test.PrecedenceConstraints[Ограничение]"
          DTS:CreationName=""
          DTS:DTSID="{fda0ce84-bc09-4bfa-9169-7778d023e835}"
          DTS:From="Package\Test\Incremental load immitation"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Ограничение"
          DTS:To="Package\Test\Crash and Restore DWH" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Test.PrecedenceConstraints[Ограничение 1]"
          DTS:CreationName=""
          DTS:DTSID="{6ca90a41-dd1b-4d53-81ed-756ca3daaaec}"
          DTS:From="Package\Test\Ingest data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Ограничение 1"
          DTS:To="Package\Test\Initial load" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3B477D3D-A61C-457A-8D80-B8C6CD90799E}"
      DTS:From="Package\Logman Start"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Pre-test" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{18DFC05C-D558-4FBA-BA16-24209C64ED01}"
      DTS:From="Package\Test"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Logman Stop" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B260893C-BE28-4CE6-B80F-9D9FAB7D433D}"
      DTS:From="Package\Pre-test"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Test" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Logman Start"
          TopLeft="596.5,54.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Logman Stop"
          TopLeft="597,1184.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\Pre-test\Clean up backups"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="146,42"
          Id="Package\Pre-test\Clean up logs"
          TopLeft="233,5.49999999999989" />
        <NodeLayout
          Size="193,42"
          Id="Package\Pre-test\Maintence Subsystems"
          TopLeft="439.5,5.49999999999989" />
        <NodeLayout
          Size="118,42"
          Id="Package\Pre-test\PreTest"
          TopLeft="693,5.49999999999989" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="816,103"
          Size="816,146"
          Id="Package\Pre-test"
          TopLeft="261,156.5" />
        <NodeLayout
          Size="200,42"
          Id="Package\Test\Crash and Restore DWH"
          TopLeft="560,621.5" />
        <NodeLayout
          Size="212,42"
          Id="Package\Test\Incremental load immitation\CustomerSCD2TestStage1"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Test\Incremental load immitation\Incremental load"
          TopLeft="579.5,5.5" />
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение]"
          TopLeft="608.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-497.333333333333,60"
              Start="0,0"
              End="-497.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.0975609756098" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.0975609756098"
                    Point2="0,16.0975609756098"
                    Point3="-4,16.0975609756098" />
                  <mssgle:LineSegment
                    End="-493.333333333333,16.0975609756098" />
                  <mssgle:CubicBezierSegment
                    Point1="-493.333333333333,16.0975609756098"
                    Point2="-497.333333333333,16.0975609756098"
                    Point3="-497.333333333333,20.0975609756098" />
                  <mssgle:LineSegment
                    End="-497.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-256.666666666667,21.0975609756098,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="214,42"
          Id="Package\Test\Incremental load immitation\EmployeeSCD2TestStage2"
          TopLeft="278.5,107.5" />
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 5]"
          TopLeft="634.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-248.666666666667,60"
              Start="0,0"
              End="-248.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3564356435643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3564356435643"
                    Point2="0,24.3564356435643"
                    Point3="-4,24.3564356435643" />
                  <mssgle:LineSegment
                    End="-244.666666666667,24.3564356435643" />
                  <mssgle:CubicBezierSegment
                    Point1="-244.666666666667,24.3564356435643"
                    Point2="-248.666666666667,24.3564356435643"
                    Point3="-248.666666666667,28.3564356435643" />
                  <mssgle:LineSegment
                    End="-248.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-132.333333333333,29.3564356435643,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="212,42"
          Id="Package\Test\Incremental load immitation\ProductSCD1TestStage1"
          TopLeft="553.5,107.5" />
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 1]"
          TopLeft="659.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="203,42"
          Id="Package\Test\Incremental load immitation\ProductSCD1TestStage2"
          TopLeft="826,107.5" />
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 2]"
          TopLeft="684.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="242.666666666667,59.9999999999999"
              Start="0,0"
              End="242.666666666667,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3564356435643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3564356435643"
                    Point2="0,24.3564356435643"
                    Point3="4,24.3564356435643" />
                  <mssgle:LineSegment
                    End="238.666666666667,24.3564356435643" />
                  <mssgle:CubicBezierSegment
                    Point1="238.666666666667,24.3564356435643"
                    Point2="242.666666666667,24.3564356435643"
                    Point3="242.666666666667,28.3564356435643" />
                  <mssgle:LineSegment
                    End="242.666666666667,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="113.333333333333,29.3564356435643,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="214,42"
          Id="Package\Test\Incremental load immitation\EmployeeSCD2TestStage1"
          TopLeft="1089.5,107.5" />
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 3]"
          TopLeft="710.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="486.333333333333,59.9999999999999"
              Start="0,0"
              End="486.333333333333,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.0975609756097" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.0975609756097"
                    Point2="0,16.0975609756097"
                    Point3="4,16.0975609756097" />
                  <mssgle:LineSegment
                    End="482.333333333333,16.0975609756097" />
                  <mssgle:CubicBezierSegment
                    Point1="482.333333333333,16.0975609756097"
                    Point2="486.333333333333,16.0975609756097"
                    Point3="486.333333333333,20.0975609756097" />
                  <mssgle:LineSegment
                    End="486.333333333333,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="235.166666666667,21.0975609756097,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1309,204"
          Size="1309,248"
          Id="Package\Test\Incremental load immitation"
          TopLeft="5.5,313.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\Test\Ingest data\Northwind (упрощённая)"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="138,42"
          Id="Package\Test\Ingest data\xmlcalendar"
          TopLeft="268.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="412,103"
          Size="412,146"
          Id="Package\Test\Ingest data"
          TopLeft="454,5.5" />
        <NodeLayout
          Size="129,42"
          Id="Package\Test\Initial load"
          TopLeft="595.5,211.5" />
        <EdgeLayout
          Id="Package\Test.PrecedenceConstraints[Constraint]"
          TopLeft="660,253.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Test.PrecedenceConstraints[Ограничение]"
          TopLeft="660,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Test.PrecedenceConstraints[Ограничение 1]"
          TopLeft="660,151.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1320,719"
          Size="1320,763"
          Id="Package\Test"
          TopLeft="13.5000000000001,362.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="669,96.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="671.25,1125.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="671.25,302.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>