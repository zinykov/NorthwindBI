<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/6/2022 10:28:24 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SWIFT3"
  DTS:CreatorName="SWIFT3\zinyk"
  DTS:DTSID="{C1C4F31D-0005-4665-8475-4140DF91275F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5467.0"
  DTS:LocaleID="1049"
  DTS:ObjectName="Incremental load Test"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="464"
  DTS:VersionGUID="{F5E34F7D-4EE2-4CF3-9B20-BF94BB945344}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Logs"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Записывает элементы журнала для событий в базу данных SQL Server"
      DTS:DTSID="{A8C9FA55-1950-4680-A77F-EF2C9A9DDC3C}"
      DTS:ObjectName="Регистратор служб SSIS для SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC93B553-1507-49F2-8B7C-E995D8057162}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LineageKey"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3FA4683-CFFC-4342-A866-CD8882942DE4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LoadDateIncrementalEnd"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">1/3/1998</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C6ABE905-D25D-4C20-B802-D70E7AA8C000}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LoadDateInitialEnd"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">12/31/1997</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{51AE83DC-9B69-4C25-B9D4-64BA46033972}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ExternalFilesPath]+&quot;logs\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogsPath"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\zinyk\source\repos\Northwind_BI_Solution\logs\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{824AB4AA-0B41-42C0-BBDC-805A2A0430CF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_CutoffTime"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,12,DiagnosticEx</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{A8C9FA55-1950-4680-A77F-EF2C9A9DDC3C}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Logman Start"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:Disabled="True"
      DTS:DTSID="{d643eee3-1d30-47ac-9388-f5e98fea2ec6}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Logman Start"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="%SystemRoot%\System32\logman.exe"
          Arguments="start &quot;SQL Server&quot;" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Logman Stop"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:Disabled="True"
      DTS:DTSID="{ffbaef5d-f06c-46d5-a1c6-7b053a137d15}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Logman Stop"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="%SystemRoot%\System32\logman.exe"
          Arguments="stop &quot;SQL Server&quot;" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pre-test"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Контейнер последовательности"
      DTS:DTSID="{65868300-46FB-4F60-BF5F-C1C8DF6D4D4B}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Pre-test">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Pre-test\Clean up backups"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DTSID="{3f50b46d-8a1e-4e83-b297-36f63f006181}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean up backups"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteDirectoryContent"
              TaskSourcePath="$Project::BackupFilesPath"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Pre-test\Clean up logs"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DTSID="{32f4fd47-c406-48b6-958c-2548f6d2c88c}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean up logs"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteDirectoryContent"
              TaskSourcePath="User::LogsPath"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Pre-test\Maintence Subsystems"
          DTS:CreationName="Microsoft.DbMaintenanceExecuteAgentJobTask"
          DTS:Disabled="True"
          DTS:DTSID="{46d30441-dbc2-48bb-9a5d-30c29cccd6f4}"
          DTS:ExecutableType="Microsoft.DbMaintenanceExecuteAgentJobTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Maintence Subsystems"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{EEF7B69D-5582-443F-9879-F2A3F89FA203}"
              SQLTask:ServerVersion="9"
              SQLTask:ExtendedLogging="True"
              SQLTask:LocalConnectionForLogging=""
              SQLTask:TaskName=""
              SQLTask:IgnoreDatabasesInNotOnlineState="False"
              SQLTask:AgentJobID="NorthwindBI.Maintence Subsystems" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Pre-test\PreTest"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:DTSID="{BF473DE8-3FCD-424D-BE66-E8A53BD7F7BE}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="PreTest"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>PreTest.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>LoadDateIncrementalEnd</ParameterName>
                <BindedVariableOrParameterName>User::LoadDateIncrementalEnd</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>LoadDateInitialEnd</ParameterName>
                <BindedVariableOrParameterName>User::LoadDateInitialEnd</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Test"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DTSID="{c6a0a61f-a6bc-4584-9466-0cf3bf825cb5}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Test">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Test\Crash and Restore DWH"
          DTS:CreationName="Microsoft.DbMaintenanceTSQLExecuteTask"
          DTS:Description="Задача &quot;Выполнение инструкции T-SQL&quot;"
          DTS:Disabled="True"
          DTS:DTSID="{0067baf5-e56c-4f16-a793-3f81e848a911}"
          DTS:ExecutableType="Microsoft.DbMaintenanceTSQLExecuteTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Crash and Restore DWH"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FE074E8B-01EB-4612-9FDE-8732194F562A}"
              SQLTask:SqlStatementSource="USE [master];&#xA;GO&#xA;ALTER DATABASE [NorthwindDW] SET SINGLE_USER WITH ROLLBACK IMMEDIATE&#xA;PRINT N'NorthwindDW setted in SINGLE_USER mode';&#xA;GO&#xA;&#xA;IF EXISTS ( SELECT 1 FROM [sys].[databases] WHERE [name] = N'NorthwindDW' )&#xA; BEGIN&#xA;  DROP DATABASE [NorthwindDW]&#xA;  PRINT N'NorthwindDW dropped'&#xA; END;&#xA;GO&#xA;&#xA;USE [NorthwindLogs];&#xA;GO&#xA;DECLARE @IsReadOnly AS BIT;&#xA;DECLARE @BackupFileName AS NVARCHAR(500);&#xA;DECLARE @SQL AS NVARCHAR(1000);&#xA;DECLARE @GroupName AS NVARCHAR(100);&#xA;&#xA;SET @BackupFileName = (&#xA; SELECT  TOP(1) [BackupFileName]&#xA; FROM  [dbo].[DatabaseFiles]&#xA; WHERE  [BackupFileName] LIKE '%_FULL.bak'&#xA; ORDER BY [BackupFileName] DESC&#xA;) &#xA;SET @SQL = CONCAT (&#xA;   N'USE [master]; RESTORE DATABASE [NorthwindDW] READ_WRITE_FILEGROUPS FROM DISK = '''&#xA; , @BackupFileName&#xA; , N''' WITH PARTIAL, NORECOVERY;'&#xA;)&#xA;&#xA;EXECUTE sp_executesql @SQL&#xA;      &#xA;SET @BackupFileName = (&#xA; SELECT  TOP(1) [BackupFileName]&#xA; FROM  [dbo].[DatabaseFiles]&#xA; WHERE  [BackupFileName] LIKE '%_DIFF.bak' &#xA; ORDER BY [BackupFileName] DESC&#xA;)&#xA;SET @SQL = CONCAT (&#xA;   N'USE [master]; RESTORE DATABASE [NorthwindDW] READ_WRITE_FILEGROUPS FROM DISK = '''&#xA; , @BackupFileName&#xA; , N''' WITH NORECOVERY;'&#xA;)&#xA;&#xA;EXECUTE sp_executesql @SQL&#xA;   &#xA;SET @SQL = N'USE [master]; RESTORE DATABASE [NorthwindDW] WITH RECOVERY;'&#xA;EXECUTE sp_executesql @SQL&#xA;&#xA;DECLARE RestoreDWH CURSOR FOR &#xA; SELECT  [BackupFileName]&#xA; FROM  [dbo].[DatabaseFiles]&#xA; WHERE  [IsReadOnly] = 1&#xA; ORDER BY [BackupFileName] ASC&#xA;&#xA;OPEN RestoreDWH&#xA; FETCH NEXT FROM RestoreDWH INTO @BackupFileName&#xA; WHILE @@FETCH_STATUS = 0&#xA;  BEGIN&#xA;   SET @GroupName = (&#xA;    SELECT [GroupName]&#xA;    FROM [dbo].[DatabaseFiles]&#xA;    WHERE [BackupFileName] = @BackupFileName&#xA;   )&#xA;&#xA;   SET @SQL = CONCAT (&#xA;     N'USE [master]; RESTORE DATABASE [NorthwindDW] FILEGROUP = '''&#xA;    , @GroupName&#xA;    , N''' FROM DISK = '''&#xA;    , @BackupFileName&#xA;    , N''' WITH RECOVERY;'&#xA;   )&#xA;&#xA;   EXECUTE sp_executesql @SQL&#xA;   &#xA;   FETCH NEXT FROM RestoreDWH INTO @BackupFileName&#xA;  END&#xA;CLOSE RestoreDWH&#xA;DEALLOCATE RestoreDWH;&#xA;GO"
              SQLTask:ServerVersion="9"
              SQLTask:ExtendedLogging="True"
              SQLTask:LocalConnectionForLogging=""
              SQLTask:TaskName=""
              SQLTask:IgnoreDatabasesInNotOnlineState="False" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Test\Incremental load immitation"
          DTS:AssignExpression="@var_CutoffTime = DATEADD(&quot;day&quot;, 1, @var_CutoffTime)"
          DTS:CreationName="STOCK:FORLOOP"
          DTS:DTSID="{91bc0c26-1f57-4d61-b66f-0a8c8395b77d}"
          DTS:EvalExpression="@var_CutoffTime &lt;= (DT_DATE)&quot;1998-1-3&quot;"
          DTS:ExecutableType="STOCK:FORLOOP"
          DTS:FailPackageOnFailure="True"
          DTS:InitExpression="@var_CutoffTime = (DT_DATE)&quot;1998-1-1&quot;"
          DTS:LocaleID="-1"
          DTS:MaxConcurrent="1"
          DTS:ObjectName="Incremental load immitation">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="EvalExpression">"@var_CutoffTime &lt;= (DT_DATE)\"" + (DT_WSTR, 4) YEAR( @[User::LoadDateIncrementalEnd] ) + "-" + (DT_WSTR, 2) MONTH( @[User::LoadDateIncrementalEnd] ) + "-" + (DT_WSTR, 2) DAY( @[User::LoadDateIncrementalEnd] ) + "\""</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="InitExpression">"@var_CutoffTime = (DT_DATE)\"" + (DT_WSTR, 4) YEAR( DATEADD( "dd", 1, @[User::LoadDateInitialEnd]   )  ) + "-" + (DT_WSTR, 2) MONTH( DATEADD( "dd", 1, @[User::LoadDateInitialEnd]  )  ) + "-" + (DT_WSTR, 2) DAY( DATEADD( "dd", 1, @[User::LoadDateInitialEnd]  )  ) + "\""</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\CustomerSCD2TestStage1"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{d01f78cd-e24c-4d01-822a-3e856c392cf5}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="CustomerSCD2TestStage1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_e9dd87f2f0554a699548fdaf70cd1380"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_e9dd87f2f0554a699548fdaf70cd1380.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace>
    <AssemblyName>ST_e9dd87f2f0554a699548fdaf70cd1380</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (!string.IsNullOrWhiteSpace(ErrorOutput))
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e9dd87f2f0554a699548fdaf70cd1380</msb:DisplayName>
    <msb:ProjectId>{0DCA581E-586A-43B9-A09A-FA6D7A1A11BC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e9dd87f2f0554a699548fdaf70cd1380.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_e9dd87f2f0554a699548fdaf70cd1380.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPwgQmYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAfjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACwyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MgAAAAAAAEgAAAACAAUA9CEAAIAPAAABAAAAAAAAAHQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwAwAQAAAQAAEXIBAABwKBAAAAoKAigRAAAKbxIAAApy
JQAAcG8TAAAKbxQAAAp0HAAAAQsCKBEAAApvEgAACnJdAABwbxMAAApvFAAACnQcAAABDHMVAAAK
JW8WAAAKBnJ/AABwKBcAAApvGAAACiVvFgAACnJaAQBwB3JeAQBwCCgZAAAKbxoAAAolbxYAAAoW
bxsAAAolbxYAAAoXbxwAAAolbxYAAAoXbx0AAAolbx4AAAomJW8fAAAKbyAAAAoNbyEAAApvIAAA
ChMECSgiAAAKLTECKBEAAApvIwAACh8SCCUtBiZytgEAcAlyuAEAcBEEKCQAAAp+JQAAChZvJgAA
CiYqFhMFAigRAAAKbyMAAAoZCCUtBiZytgEAcBEEJS0GJnK2AQBwfiUAAAoWEgVvJwAACioeAigo
AAAKKh4CKCkAAAoqrn4BAAAELR5yvgEAcNADAAACKCoAAApvKwAACnMsAAAKgAEAAAR+AQAABCoa
fgIAAAQqHgKAAgAABCoafgMAAAQqHgIoLQAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAFQEAAAjfgAAwAQAAMQGAAAjU3RyaW5ncwAAAACECwAAMAIA
ACNVUwC0DQAAEAAAACNHVUlEAAAAxA0AALwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEz
ABYAAAEAAAAkAAAABQAAAAYAAAAJAAAAAQAAAC0AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAAB
AAAABAAAAAEAAAABAAAAAADtAwEAAAAAAAYAiwJOBQYAGgNOBQYA1wE7BQ8AwgUAAAYABAJ7BAYA
bgJ7BAYATwJ7BAYAAQN7BAYAqwJ7BAYAxAJ7BAYAGwJ7BAYANgJcAwoA3wKcAwoAVgGcAwYAJQQe
BAYAugE7BQYAXQYeBAYA1ARuBQYAjQRmBA4AigHXAw4A6wHXAw4AcgFRBAYAnwFOBQYAcAYeBAoA
xQOcAxIABAYBARIAxwABAQYAdgMeBA4AHwY7BQ4ApwQ7BQYAuARSAAYAxQRSAAoA5AScAwYAIQEe
BAYA0AAeBAYAtAZ7BAAAAABJAAAAAAABAAEAAQAQADYEJQA5AAEAAQAAABAAdQXRBUUAAQADAAAB
EAAOBtEFWQADAAcAAwEAAC8GAAA9AAQACgARACoEvgARAEYBwgARAKkAxgAGBnsAygBWgBcGzQBW
gCYBzQBQIAAAAACGADwEBgABAIwhAAAAAIYYLgUGAAEAlCEAAAAAgxguBQYAAQCcIQAAAACTCNAE
0QABAMghAAAAAJMILgHWAAEAzyEAAAAAkwg6AdsAAQDXIQAAAACWCGQG4QACAN4hAAAAAIYYLgUG
AAIA5iEAAAAAkRg0BeYAAgAAAAEAVgMJAC4FAQARAC4FBgAZAC4FCgApAC4FEAAxAC4FEAA5AC4F
EABBAC4FEABJAC4FEABRAC4FEABZAC4FEABhAC4FEABpAC4FBgCBAC4FBgCpAC4FFQC5AC4FBgDB
ALkAJABxACcGKQDJAAAGLgDRABUEMwDZAEwDOQDpAC4FBgDpAJkEPQDhAFYGQgDxAPQAEADhAFYG
SADxAD0GEADxADgDUADxAJUGUADxAAoFUADpAHwGVQDpAPgEWQABAYwAXgDpAIIGWQDhAJYAYgDJ
AEsGZwDhAFYGbQDhAL0GdAAJASQFdwAJAUEEgABxAC4FBgCJAC4FBgARAeIAiwARAbAGlACRAC4F
mgCxAC4FBgAIABQAtAAIABgAuQApAHMAIQEuAAsA+QAuABMAAgEuABsAIQEuACMAKgEuACsAUwEu
ADMAUwEuADsAUwEuAEMAKgEuAEsAWQEuAFMAUwEuAFsAcAFDAGMAuQBJAHMAIQFhAHsAuQBjAGsA
uQAbAAMAAQAEAAMAAADUBOoAAABOAe8AAABoBvQAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAA
AAEAAADDIpR5AAAAAAAAAQAAAAQAAAAAAAAAAAAAAKIAgwAAAAAADwAAAAAAAAAAAAAAqwB9AwAA
AAAEAAAAAAAAAAAAAACiAB4EAAAAAA8AAAAAAAAAAAAAAKsAXAAAAAAAAAAAAAEAAAB/BQAABQAC
AAAAAAAAU1RfZTlkZDg3ZjJmMDU1NGE2OTk1NDhmZGFmNzBjZDEzODAAU1RfYTkwODgyN2VmZjJj
NDMxZmIzNGY0MTQwZjRiZGZjMjMAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFJlYWRUb0VuZABJc051bGxPcldoaXRlU3Bh
Y2UAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVsbEV4ZWN1dGUAZ2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9lOWRkODdmMmYwNTU0
YTY5OTU0OGZkYWY3MGNkMTM4MC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1N0YXJ0SW5mbwBQ
cm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBzZXRfUmVkaXJlY3RTdGFu
ZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hOTA4ODI3ZWZm
MmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMuUHJvcGVydGll
cwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQA
RW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9SZWRpcmVjdFN0YW5kYXJk
T3V0cHV0AGdldF9Bc3NlbWJseQBFbXB0eQAAACNQAHIAbwBnAHIAYQBtAEYAaQBsAGUAcwAoAHgA
OAA2ACkAADckAFAAcgBvAGoAZQBjAHQAOgA6AEUAeAB0AGUAcgBuAGEAbABGAGkAbABlAHMAUABh
AHQAaAAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAIDZXABNAGkAYwByAG8AcwBv
AGYAdAAgAFYAaQBzAHUAYQBsACAAUwB0AHUAZABpAG8AXAAyADAAMQA5AFwAQwBvAG0AbQB1AG4A
aQB0AHkAXABDAG8AbQBtAG8AbgA3AFwASQBEAEUAXABDAG8AbQBtAG8AbgBFAHgAdABlAG4AcwBp
AG8AbgBzAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcwB0AFcAaQBuAGQAbwB3AFwAVgBTAFQA
ZQBzAHQALgBDAG8AbgBzAG8AbABlAC4AZQB4AGUAAAMiAABXVABlAHMAdABMAGkAYgByAGEAcgBp
AGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBzAHQALgBkAGwAbAAiACAALwBUAGUA
cwB0AHMAOgAAAQAFDQAKAABxUwBUAF8AYQA5ADAAOAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBi
ADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAABPDfLTWRSnRrl4WS48lNTpAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARFRCAcGDg4ODg4CBAABDg4EIAASZQQgABJpBSABEm0cAyAAHAQgABJ5BQACDg4OBwAEDg4ODg4E
IAEBAgMgAAIEIAASfQMgAA4EAAECDgUgABKAhQYAAw4ODg4CBg4IIAUCCA4ODggKIAYBCA4ODggQ
AggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkD
BhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4
ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFQyAAAAAAAAAAAAAG4yAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAlHnDIgAAAQCUecMiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQAMABm
ADQAYgBkAGYAYwAyADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA4ADkAOQAuADMAMQAxADIANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBlADkAZABkADgANwBmADIAZgAwADUANQA0AGEANgA5ADkANQA0ADgAZgBkAGEAZgA3ADAA
YwBkADEAMwA4ADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGUAOQBkAGQAOAA3AGYAMgBmADAANQA1ADQAYQA2ADkAOQA1ADQAOABmAGQA
YQBmADcAMABjAGQAMQAzADgAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQA
MABmADQAYgBkAGYAYwAyADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAOAA5ADkALgAzADEAMQAyADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAA5ADkALgAzADEAMQAyADQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAgDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\EmployeeSCD2TestStage1"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{f78de93d-19f9-4827-a292-b84aad0af39c}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EmployeeSCD2TestStage1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_9c82864d479846528765a8776babb7b4"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (!string.IsNullOrWhiteSpace(ErrorOutput))
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_9c82864d479846528765a8776babb7b4.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace>
    <AssemblyName>ST_9c82864d479846528765a8776babb7b4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9c82864d479846528765a8776babb7b4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9c82864d479846528765a8776babb7b4</msb:DisplayName>
    <msb:ProjectId>{19558690-600B-4C11-84A4-628E3FECAD33}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9c82864d479846528765a8776babb7b4.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_9c82864d479846528765a8776babb7b4.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHwiQmYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAfjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACwyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MgAAAAAAAEgAAAACAAUA9CEAAIAPAAABAAAAAAAAAHQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwAwAQAAAQAAEXIBAABwKBAAAAoKAigRAAAKbxIAAApy
JQAAcG8TAAAKbxQAAAp0HAAAAQsCKBEAAApvEgAACnJdAABwbxMAAApvFAAACnQcAAABDHMVAAAK
JW8WAAAKBnJ/AABwKBcAAApvGAAACiVvFgAACnJaAQBwB3JeAQBwCCgZAAAKbxoAAAolbxYAAAoW
bxsAAAolbxYAAAoXbxwAAAolbxYAAAoXbx0AAAolbx4AAAomJW8fAAAKbyAAAAoNbyEAAApvIAAA
ChMECSgiAAAKLTECKBEAAApvIwAACh8SCCUtBiZytgEAcAlyuAEAcBEEKCQAAAp+JQAAChZvJgAA
CiYqFhMFAigRAAAKbyMAAAoZCCUtBiZytgEAcBEEJS0GJnK2AQBwfiUAAAoWEgVvJwAACioeAigo
AAAKKh4CKCkAAAoqrn4BAAAELR5yvgEAcNADAAACKCoAAApvKwAACnMsAAAKgAEAAAR+AQAABCoa
fgIAAAQqHgKAAgAABCoafgMAAAQqHgIoLQAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAFQEAAAjfgAAwAQAAMQGAAAjU3RyaW5ncwAAAACECwAAMAIA
ACNVUwC0DQAAEAAAACNHVUlEAAAAxA0AALwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEz
ABYAAAEAAAAkAAAABQAAAAYAAAAJAAAAAQAAAC0AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAAB
AAAABAAAAAEAAAABAAAAAADtAwEAAAAAAAYAiwJOBQYAGgNOBQYA1wE7BQ8AwgUAAAYABAJ7BAYA
bgJ7BAYATwJ7BAYAAQN7BAYAqwJ7BAYAxAJ7BAYAGwJ7BAYANgJcAwoA3wKcAwoAVgGcAwYAJQQe
BAYAugE7BQYAXQYeBAYA1ARuBQYAjQRmBA4AigHXAw4A6wHXAw4AcgFRBAYAnwFOBQYAcAYeBAoA
xQOcAxIABAYBARIAxwABAQYAdgMeBA4AHwY7BQ4ApwQ7BQYAuARSAAYAxQRSAAoA5AScAwYAIQEe
BAYA0AAeBAYAtAZ7BAAAAABJAAAAAAABAAEAAQAQADYEAQA5AAEAAQAAABAAdQXRBUUAAQADAAAB
EAAOBtEFWQADAAcAAwEAAC8GAAA9AAQACgARACoEvgARAEYBwgARAKkAxgAGBnsAygBWgBcGzQBW
gCYBzQBQIAAAAACGADwEBgABAIwhAAAAAIYYLgUGAAEAlCEAAAAAgxguBQYAAQCcIQAAAACTCNAE
0QABAMghAAAAAJMILgHWAAEAzyEAAAAAkwg6AdsAAQDXIQAAAACWCGQG4QACAN4hAAAAAIYYLgUG
AAIA5iEAAAAAkRg0BeYAAgAAAAEAVgMJAC4FAQARAC4FBgAZAC4FCgApAC4FEAAxAC4FEAA5AC4F
EABBAC4FEABJAC4FEABRAC4FEABZAC4FEABhAC4FEABpAC4FBgCBAC4FBgCpAC4FFQC5AC4FBgDB
ALkAJABxACcGKQDJAAAGLgDRABUEMwDZAEwDOQDpAC4FBgDpAJkEPQDhAFYGQgDxAPQAEADhAFYG
SADxAD0GEADxADgDUADxAJUGUADxAAoFUADpAHwGVQDpAPgEWQABAYwAXgDpAIIGWQDhAJYAYgDJ
AEsGZwDhAFYGbQDhAL0GdAAJASQFdwAJAUEEgABxAC4FBgCJAC4FBgARAeIAiwARAbAGlACRAC4F
mgCxAC4FBgAIABQAtAAIABgAuQApAHMAIQEuAAsA+QAuABMAAgEuABsAIQEuACMAKgEuACsAUwEu
ADMAUwEuADsAUwEuAEMAKgEuAEsAWQEuAFMAUwEuAFsAcAFDAGMAuQBJAHMAIQFhAHsAuQBjAGsA
uQAbAAMAAQAEAAMAAADUBOoAAABOAe8AAABoBvQAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAA
AAEAAADDIlZ6AAAAAAAAJQAAAAQAAAAAAAAAAAAAAKIAgwAAAAAADwAAAAAAAAAAAAAAqwB9AwAA
AAAEAAAAAAAAAAAAAACiAB4EAAAAAA8AAAAAAAAAAAAAAKsAXAAAAAAAAAAAAAEAAAB/BQAABQAC
AAAAAAAAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMAU1RfOWM4Mjg2NGQ0Nzk4
NDY1Mjg3NjVhODc3NmJhYmI3YjQAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFJlYWRUb0VuZABJc051bGxPcldoaXRlU3Bh
Y2UAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVsbEV4ZWN1dGUAZ2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF85YzgyODY0ZDQ3OTg0
NjUyODc2NWE4Nzc2YmFiYjdiNC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1N0YXJ0SW5mbwBQ
cm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBzZXRfUmVkaXJlY3RTdGFu
ZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hOTA4ODI3ZWZm
MmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMuUHJvcGVydGll
cwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQA
RW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9SZWRpcmVjdFN0YW5kYXJk
T3V0cHV0AGdldF9Bc3NlbWJseQBFbXB0eQAAACNQAHIAbwBnAHIAYQBtAEYAaQBsAGUAcwAoAHgA
OAA2ACkAADckAFAAcgBvAGoAZQBjAHQAOgA6AEUAeAB0AGUAcgBuAGEAbABGAGkAbABlAHMAUABh
AHQAaAAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAIDZXABNAGkAYwByAG8AcwBv
AGYAdAAgAFYAaQBzAHUAYQBsACAAUwB0AHUAZABpAG8AXAAyADAAMQA5AFwAQwBvAG0AbQB1AG4A
aQB0AHkAXABDAG8AbQBtAG8AbgA3AFwASQBEAEUAXABDAG8AbQBtAG8AbgBFAHgAdABlAG4AcwBp
AG8AbgBzAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcwB0AFcAaQBuAGQAbwB3AFwAVgBTAFQA
ZQBzAHQALgBDAG8AbgBzAG8AbABlAC4AZQB4AGUAAAMiAABXVABlAHMAdABMAGkAYgByAGEAcgBp
AGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBzAHQALgBkAGwAbAAiACAALwBUAGUA
cwB0AHMAOgAAAQAFDQAKAABxUwBUAF8AYQA5ADAAOAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBi
ADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAC8msm5ilMVQ7RknSkezVwNAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARFRCAcGDg4ODg4CBAABDg4EIAASZQQgABJpBSABEm0cAyAAHAQgABJ5BQACDg4OBwAEDg4ODg4E
IAEBAgMgAAIEIAASfQMgAA4EAAECDgUgABKAhQYAAw4ODg4CBg4IIAUCCA4ODggKIAYBCA4ODggQ
AggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkD
BhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4
ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFQyAAAAAAAAAAAAAG4yAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAVnrDIgAAAQBWesMiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQAMABm
ADQAYgBkAGYAYwAyADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA4ADkAOQAuADMAMQAzADEAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA5AGMAOAAyADgANgA0AGQANAA3ADkAOAA0ADYANQAyADgANwA2ADUAYQA4ADcANwA2AGIA
YQBiAGIANwBiADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADkAYwA4ADIAOAA2ADQAZAA0ADcAOQA4ADQANgA1ADIAOAA3ADYANQBhADgA
NwA3ADYAYgBhAGIAYgA3AGIANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQA
MABmADQAYgBkAGYAYwAyADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAOAA5ADkALgAzADEAMwAxADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAA5ADkALgAzADEAMwAxADgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAgDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\EmployeeSCD2TestStage2"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{3bf1c217-3d1a-47c0-a1b3-f4944fb2e81f}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EmployeeSCD2TestStage2"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_ee04c5f997de4dc48683fdde411482b8"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_ee04c5f997de4dc48683fdde411482b8.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace>
    <AssemblyName>ST_ee04c5f997de4dc48683fdde411482b8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (!string.IsNullOrWhiteSpace(ErrorOutput))
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ee04c5f997de4dc48683fdde411482b8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ee04c5f997de4dc48683fdde411482b8</msb:DisplayName>
    <msb:ProjectId>{577D180B-6B3C-4683-AD67-DB09D0604153}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ee04c5f997de4dc48683fdde411482b8.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_ee04c5f997de4dc48683fdde411482b8.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIAhQmYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAfjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACwyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MgAAAAAAAEgAAAACAAUA9CEAAIAPAAABAAAAAAAAAHQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwAwAQAAAQAAEXIBAABwKBAAAAoKAigRAAAKbxIAAApy
JQAAcG8TAAAKbxQAAAp0HAAAAQsCKBEAAApvEgAACnJdAABwbxMAAApvFAAACnQcAAABDHMVAAAK
JW8WAAAKBnJ/AABwKBcAAApvGAAACiVvFgAACnJaAQBwB3JeAQBwCCgZAAAKbxoAAAolbxYAAAoW
bxsAAAolbxYAAAoXbxwAAAolbxYAAAoXbx0AAAolbx4AAAomJW8fAAAKbyAAAAoNbyEAAApvIAAA
ChMECSgiAAAKLTECKBEAAApvIwAACh8SCCUtBiZytgEAcAlyuAEAcBEEKCQAAAp+JQAAChZvJgAA
CiYqFhMFAigRAAAKbyMAAAoZCCUtBiZytgEAcBEEJS0GJnK2AQBwfiUAAAoWEgVvJwAACioeAigo
AAAKKh4CKCkAAAoqrn4BAAAELR5yvgEAcNADAAACKCoAAApvKwAACnMsAAAKgAEAAAR+AQAABCoa
fgIAAAQqHgKAAgAABCoafgMAAAQqHgIoLQAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAFQEAAAjfgAAwAQAAMQGAAAjU3RyaW5ncwAAAACECwAAMAIA
ACNVUwC0DQAAEAAAACNHVUlEAAAAxA0AALwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEz
ABYAAAEAAAAkAAAABQAAAAYAAAAJAAAAAQAAAC0AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAAB
AAAABAAAAAEAAAABAAAAAADtAwEAAAAAAAYAiwJOBQYAGgNOBQYA1wE7BQ8AwgUAAAYABAJ7BAYA
bgJ7BAYATwJ7BAYAAQN7BAYAqwJ7BAYAxAJ7BAYAGwJ7BAYANgJcAwoA3wKcAwoAVgGcAwYAJQQe
BAYAugE7BQYAXQYeBAYA1ARuBQYAjQRmBA4AigHXAw4A6wHXAw4AcgFRBAYAnwFOBQYAcAYeBAoA
xQOcAxIABAYBARIAxwABAQYAdgMeBA4AHwY7BQ4ApwQ7BQYAuARSAAYAxQRSAAoA5AScAwYAIQEe
BAYA0AAeBAYAtAZ7BAAAAABJAAAAAAABAAEAAQAQADYEAQA5AAEAAQAAABAAdQXRBUUAAQADAAAB
EAAOBtEFWQADAAcAAwEAAC8GAAA9AAQACgARACoEvgARAEYBwgARAKkAxgAGBnsAygBWgBcGzQBW
gCYBzQBQIAAAAACGADwEBgABAIwhAAAAAIYYLgUGAAEAlCEAAAAAgxguBQYAAQCcIQAAAACTCNAE
0QABAMghAAAAAJMILgHWAAEAzyEAAAAAkwg6AdsAAQDXIQAAAACWCGQG4QACAN4hAAAAAIYYLgUG
AAIA5iEAAAAAkRg0BeYAAgAAAAEAVgMJAC4FAQARAC4FBgAZAC4FCgApAC4FEAAxAC4FEAA5AC4F
EABBAC4FEABJAC4FEABRAC4FEABZAC4FEABhAC4FEABpAC4FBgCBAC4FBgCpAC4FFQC5AC4FBgDB
ALkAJABxACcGKQDJAAAGLgDRABUEMwDZAEwDOQDpAC4FBgDpAJkEPQDhAFYGQgDxAPQAEADhAFYG
SADxAD0GEADxADgDUADxAJUGUADxAAoFUADpAHwGVQDpAPgEWQABAYwAXgDpAIIGWQDhAJYAYgDJ
AEsGZwDhAFYGbQDhAL0GdAAJASQFdwAJAUEEgABxAC4FBgCJAC4FBgARAeIAiwARAbAGlACRAC4F
mgCxAC4FBgAIABQAtAAIABgAuQApAHMAIQEuAAsA+QAuABMAAgEuABsAIQEuACMAKgEuACsAUwEu
ADMAUwEuADsAUwEuAEMAKgEuAEsAWQEuAFMAUwEuAFsAcAFDAGMAuQBJAHMAIQFhAHsAuQBjAGsA
uQAbAAMAAQAEAAMAAADUBOoAAABOAe8AAABoBvQAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAA
AAEAAADDIth5AAAAAAAAJQAAAAQAAAAAAAAAAAAAAKIAgwAAAAAADwAAAAAAAAAAAAAAqwB9AwAA
AAAEAAAAAAAAAAAAAACiAB4EAAAAAA8AAAAAAAAAAAAAAKsAXAAAAAAAAAAAAAEAAAB/BQAABQAC
AAAAAAAAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMAU1RfZWUwNGM1Zjk5N2Rl
NGRjNDg2ODNmZGRlNDExNDgyYjgAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFJlYWRUb0VuZABJc051bGxPcldoaXRlU3Bh
Y2UAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVsbEV4ZWN1dGUAZ2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9lZTA0YzVmOTk3ZGU0
ZGM0ODY4M2ZkZGU0MTE0ODJiOC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1N0YXJ0SW5mbwBQ
cm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBzZXRfUmVkaXJlY3RTdGFu
ZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hOTA4ODI3ZWZm
MmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMuUHJvcGVydGll
cwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQA
RW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9SZWRpcmVjdFN0YW5kYXJk
T3V0cHV0AGdldF9Bc3NlbWJseQBFbXB0eQAAACNQAHIAbwBnAHIAYQBtAEYAaQBsAGUAcwAoAHgA
OAA2ACkAADckAFAAcgBvAGoAZQBjAHQAOgA6AEUAeAB0AGUAcgBuAGEAbABGAGkAbABlAHMAUABh
AHQAaAAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAIDZXABNAGkAYwByAG8AcwBv
AGYAdAAgAFYAaQBzAHUAYQBsACAAUwB0AHUAZABpAG8AXAAyADAAMQA5AFwAQwBvAG0AbQB1AG4A
aQB0AHkAXABDAG8AbQBtAG8AbgA3AFwASQBEAEUAXABDAG8AbQBtAG8AbgBFAHgAdABlAG4AcwBp
AG8AbgBzAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcwB0AFcAaQBuAGQAbwB3AFwAVgBTAFQA
ZQBzAHQALgBDAG8AbgBzAG8AbABlAC4AZQB4AGUAAAMiAABXVABlAHMAdABMAGkAYgByAGEAcgBp
AGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBzAHQALgBkAGwAbAAiACAALwBUAGUA
cwB0AHMAOgAAAQAFDQAKAABxUwBUAF8AYQA5ADAAOAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBi
ADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAB1YhISA8rzS6qXa2buJBvVAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARFRCAcGDg4ODg4CBAABDg4EIAASZQQgABJpBSABEm0cAyAAHAQgABJ5BQACDg4OBwAEDg4ODg4E
IAEBAgMgAAIEIAASfQMgAA4EAAECDgUgABKAhQYAAw4ODg4CBg4IIAUCCA4ODggKIAYBCA4ODggQ
AggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkD
BhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4
ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFQyAAAAAAAAAAAAAG4yAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA2HnDIgAAAQDYecMiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQAMABm
ADQAYgBkAGYAYwAyADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA4ADkAOQAuADMAMQAxADkAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBlAGUAMAA0AGMANQBmADkAOQA3AGQAZQA0AGQAYwA0ADgANgA4ADMAZgBkAGQAZQA0ADEA
MQA0ADgAMgBiADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGUAZQAwADQAYwA1AGYAOQA5ADcAZABlADQAZABjADQAOAA2ADgAMwBmAGQA
ZABlADQAMQAxADQAOAAyAGIAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQA
MABmADQAYgBkAGYAYwAyADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAOAA5ADkALgAzADEAMQA5ADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAA5ADkALgAzADEAMQA5ADIAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAgDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\Incremental load"
              DTS:CreationName="Microsoft.ExecutePackageTask"
              DTS:DTSID="{4d264142-23b8-4cb4-9790-37298c252431}"
              DTS:ExecutableType="Microsoft.ExecutePackageTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Incremental load"
              DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ExecutePackageTask>
                  <UseProjectReference>True</UseProjectReference>
                  <PackageName>Incremental load.dtsx</PackageName>
                  <ParameterAssignment>
                    <ParameterName>CutoffTime</ParameterName>
                    <BindedVariableOrParameterName>User::var_CutoffTime</BindedVariableOrParameterName>
                  </ParameterAssignment>
                  <ParameterAssignment>
                    <ParameterName>LoadDateInitialEnd</ParameterName>
                    <BindedVariableOrParameterName>User::LoadDateInitialEnd</BindedVariableOrParameterName>
                  </ParameterAssignment>
                </ExecutePackageTask>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\ProductSCD1TestStage1"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{550b8204-2ee3-4279-b01b-a2480929baa8}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="ProductSCD1TestStage1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_b7efed13c8624e00b6e24639ff9071b4"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (!string.IsNullOrWhiteSpace(ErrorOutput))
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_b7efed13c8624e00b6e24639ff9071b4.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace>
    <AssemblyName>ST_b7efed13c8624e00b6e24639ff9071b4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b7efed13c8624e00b6e24639ff9071b4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b7efed13c8624e00b6e24639ff9071b4</msb:DisplayName>
    <msb:ProjectId>{0FAFE463-CE64-42DE-947C-0168A8F7EC23}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b7efed13c8624e00b6e24639ff9071b4.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_b7efed13c8624e00b6e24639ff9071b4.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANwhQmYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAfjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACwyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MgAAAAAAAEgAAAACAAUA9CEAAIAPAAABAAAAAAAAAHQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwAwAQAAAQAAEXIBAABwKBAAAAoKAigRAAAKbxIAAApy
JQAAcG8TAAAKbxQAAAp0HAAAAQsCKBEAAApvEgAACnJdAABwbxMAAApvFAAACnQcAAABDHMVAAAK
JW8WAAAKBnJ/AABwKBcAAApvGAAACiVvFgAACnJaAQBwB3JeAQBwCCgZAAAKbxoAAAolbxYAAAoW
bxsAAAolbxYAAAoXbxwAAAolbxYAAAoXbx0AAAolbx4AAAomJW8fAAAKbyAAAAoNbyEAAApvIAAA
ChMECSgiAAAKLTECKBEAAApvIwAACh8SCCUtBiZytgEAcAlyuAEAcBEEKCQAAAp+JQAAChZvJgAA
CiYqFhMFAigRAAAKbyMAAAoZCCUtBiZytgEAcBEEJS0GJnK2AQBwfiUAAAoWEgVvJwAACioeAigo
AAAKKh4CKCkAAAoqrn4BAAAELR5yvgEAcNADAAACKCoAAApvKwAACnMsAAAKgAEAAAR+AQAABCoa
fgIAAAQqHgKAAgAABCoafgMAAAQqHgIoLQAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAFQEAAAjfgAAwAQAAMQGAAAjU3RyaW5ncwAAAACECwAAMAIA
ACNVUwC0DQAAEAAAACNHVUlEAAAAxA0AALwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEz
ABYAAAEAAAAkAAAABQAAAAYAAAAJAAAAAQAAAC0AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAAB
AAAABAAAAAEAAAABAAAAAADtAwEAAAAAAAYAiwJOBQYAGgNOBQYA1wE7BQ8AwgUAAAYABAJ7BAYA
bgJ7BAYATwJ7BAYAAQN7BAYAqwJ7BAYAxAJ7BAYAGwJ7BAYANgJcAwoA3wKcAwoAVgGcAwYAJQQe
BAYAugE7BQYAXQYeBAYA1ARuBQYAjQRmBA4AigHXAw4A6wHXAw4AcgFRBAYAnwFOBQYAcAYeBAoA
xQOcAxIABAYBARIAxwABAQYAdgMeBA4AHwY7BQ4ApwQ7BQYAuARSAAYAxQRSAAoA5AScAwYAIQEe
BAYA0AAeBAYAtAZ7BAAAAABJAAAAAAABAAEAAQAQADYEAQA5AAEAAQAAABAAdQXRBUUAAQADAAAB
EAAOBtEFWQADAAcAAwEAAC8GAAA9AAQACgARACoEvgARAEYBwgARAKkAxgAGBnsAygBWgBcGzQBW
gCYBzQBQIAAAAACGADwEBgABAIwhAAAAAIYYLgUGAAEAlCEAAAAAgxguBQYAAQCcIQAAAACTCNAE
0QABAMghAAAAAJMILgHWAAEAzyEAAAAAkwg6AdsAAQDXIQAAAACWCGQG4QACAN4hAAAAAIYYLgUG
AAIA5iEAAAAAkRg0BeYAAgAAAAEAVgMJAC4FAQARAC4FBgAZAC4FCgApAC4FEAAxAC4FEAA5AC4F
EABBAC4FEABJAC4FEABRAC4FEABZAC4FEABhAC4FEABpAC4FBgCBAC4FBgCpAC4FFQC5AC4FBgDB
ALkAJABxACcGKQDJAAAGLgDRABUEMwDZAEwDOQDpAC4FBgDpAJkEPQDhAFYGQgDxAPQAEADhAFYG
SADxAD0GEADxADgDUADxAJUGUADxAAoFUADpAHwGVQDpAPgEWQABAYwAXgDpAIIGWQDhAJYAYgDJ
AEsGZwDhAFYGbQDhAL0GdAAJASQFdwAJAUEEgABxAC4FBgCJAC4FBgARAeIAiwARAbAGlACRAC4F
mgCxAC4FBgAIABQAtAAIABgAuQApAHMAIQEuAAsA+QAuABMAAgEuABsAIQEuACMAKgEuACsAUwEu
ADMAUwEuADsAUwEuAEMAKgEuAEsAWQEuAFMAUwEuAFsAcAFDAGMAuQBJAHMAIQFhAHsAuQBjAGsA
uQAbAAMAAQAEAAMAAADUBOoAAABOAe8AAABoBvQAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAA
AAEAAADDIgZ6AAAAAAAAJQAAAAQAAAAAAAAAAAAAAKIAgwAAAAAADwAAAAAAAAAAAAAAqwB9AwAA
AAAEAAAAAAAAAAAAAACiAB4EAAAAAA8AAAAAAAAAAAAAAKsAXAAAAAAAAAAAAAEAAAB/BQAABQAC
AAAAAAAAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMAU1RfYjdlZmVkMTNjODYy
NGUwMGI2ZTI0NjM5ZmY5MDcxYjQAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFJlYWRUb0VuZABJc051bGxPcldoaXRlU3Bh
Y2UAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVsbEV4ZWN1dGUAZ2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9iN2VmZWQxM2M4NjI0
ZTAwYjZlMjQ2MzlmZjkwNzFiNC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1N0YXJ0SW5mbwBQ
cm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBzZXRfUmVkaXJlY3RTdGFu
ZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hOTA4ODI3ZWZm
MmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMuUHJvcGVydGll
cwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQA
RW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9SZWRpcmVjdFN0YW5kYXJk
T3V0cHV0AGdldF9Bc3NlbWJseQBFbXB0eQAAACNQAHIAbwBnAHIAYQBtAEYAaQBsAGUAcwAoAHgA
OAA2ACkAADckAFAAcgBvAGoAZQBjAHQAOgA6AEUAeAB0AGUAcgBuAGEAbABGAGkAbABlAHMAUABh
AHQAaAAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAIDZXABNAGkAYwByAG8AcwBv
AGYAdAAgAFYAaQBzAHUAYQBsACAAUwB0AHUAZABpAG8AXAAyADAAMQA5AFwAQwBvAG0AbQB1AG4A
aQB0AHkAXABDAG8AbQBtAG8AbgA3AFwASQBEAEUAXABDAG8AbQBtAG8AbgBFAHgAdABlAG4AcwBp
AG8AbgBzAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcwB0AFcAaQBuAGQAbwB3AFwAVgBTAFQA
ZQBzAHQALgBDAG8AbgBzAG8AbABlAC4AZQB4AGUAAAMiAABXVABlAHMAdABMAGkAYgByAGEAcgBp
AGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBzAHQALgBkAGwAbAAiACAALwBUAGUA
cwB0AHMAOgAAAQAFDQAKAABxUwBUAF8AYQA5ADAAOAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBi
ADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAACeCeQKjcFmQppGwpMHlDjgAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARFRCAcGDg4ODg4CBAABDg4EIAASZQQgABJpBSABEm0cAyAAHAQgABJ5BQACDg4OBwAEDg4ODg4E
IAEBAgMgAAIEIAASfQMgAA4EAAECDgUgABKAhQYAAw4ODg4CBg4IIAUCCA4ODggKIAYBCA4ODggQ
AggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkD
BhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4
ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFQyAAAAAAAAAAAAAG4yAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEABnrDIgAAAQAGesMiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQAMABm
ADQAYgBkAGYAYwAyADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA4ADkAOQAuADMAMQAyADMAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBiADcAZQBmAGUAZAAxADMAYwA4ADYAMgA0AGUAMAAwAGIANgBlADIANAA2ADMAOQBmAGYA
OQAwADcAMQBiADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGIANwBlAGYAZQBkADEAMwBjADgANgAyADQAZQAwADAAYgA2AGUAMgA0ADYA
MwA5AGYAZgA5ADAANwAxAGIANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQA
MABmADQAYgBkAGYAYwAyADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAOAA5ADkALgAzADEAMgAzADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAA5ADkALgAzADEAMgAzADgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAgDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Incremental load immitation\ProductSCD1TestStage2"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DTSID="{5d848886-4890-4c1c-867b-7b1ea7b99c6d}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="ProductSCD1TestStage2"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c78c0b87f9a941e6b0290626d781f9e5"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,$Project::ExternalFilesPath">
                  <ProjectItem
                    Name="ST_c78c0b87f9a941e6b0290626d781f9e5.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{180D5672-3055-46D4-9674-95C70F3FA024}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a908827eff2c431fb34f4140f4bdfc23</RootNamespace>
    <AssemblyName>ST_c78c0b87f9a941e6b0290626d781f9e5</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a908827eff2c431fb34f4140f4bdfc23")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_a908827eff2c431fb34f4140f4bdfc23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading win1251om a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading win1251om a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading win1251om a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading win1251om a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events win1251om a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning win1251om this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string ProgramFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
            string ExternalFiles = (string)Dts.Variables["$Project::ExternalFilesPath"].Value;
            string TestName = (string)Dts.Variables["System::TaskName"].Value;
            
            System.Diagnostics.Process VSTest = new System.Diagnostics.Process();
            VSTest.StartInfo.FileName = $"{ProgramFiles}\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\VSTest.Console.exe";
            VSTest.StartInfo.Arguments = $"\"{ExternalFiles}TestLibraries\\NorthwindETLTest.dll\" /Tests:{TestName}";
            VSTest.StartInfo.UseShellExecute = false;
            VSTest.StartInfo.RedirectStandardOutput = true;
            VSTest.StartInfo.RedirectStandardError = true;
            VSTest.Start();

            string ErrorOutput = VSTest.StandardError.ReadToEnd();
            string StandartOutput = VSTest.StandardOutput.ReadToEnd();

            if (!string.IsNullOrWhiteSpace(ErrorOutput))
            {
                Dts.Events.FireError(18, $"{TestName}", $"{ErrorOutput}\r\n{StandartOutput}", String.Empty, 0);
            }
            else
            {
                bool fireAgain = false;
                Dts.Events.FireInformation(3, $"{TestName}", $"{StandartOutput}", String.Empty, 0, ref fireAgain);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c78c0b87f9a941e6b0290626d781f9e5</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c78c0b87f9a941e6b0290626d781f9e5</msb:DisplayName>
    <msb:ProjectId>{BF8CD50E-C05B-4314-AAC6-3BB73B914D52}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c78c0b87f9a941e6b0290626d781f9e5.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Settings.get_Default():ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Sett" +
    "ings")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a908827eff2c431fb34f4140f4bdfc23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a908827eff2c431fb34f4140f4bdfc23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c78c0b87f9a941e6b0290626d781f9e5.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAL0iQmYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAfjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACwyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MgAAAAAAAEgAAAACAAUA9CEAAIAPAAABAAAAAAAAAHQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwAwAQAAAQAAEXIBAABwKBAAAAoKAigRAAAKbxIAAApy
JQAAcG8TAAAKbxQAAAp0HAAAAQsCKBEAAApvEgAACnJdAABwbxMAAApvFAAACnQcAAABDHMVAAAK
JW8WAAAKBnJ/AABwKBcAAApvGAAACiVvFgAACnJaAQBwB3JeAQBwCCgZAAAKbxoAAAolbxYAAAoW
bxsAAAolbxYAAAoXbxwAAAolbxYAAAoXbx0AAAolbx4AAAomJW8fAAAKbyAAAAoNbyEAAApvIAAA
ChMECSgiAAAKLTECKBEAAApvIwAACh8SCCUtBiZytgEAcAlyuAEAcBEEKCQAAAp+JQAAChZvJgAA
CiYqFhMFAigRAAAKbyMAAAoZCCUtBiZytgEAcBEEJS0GJnK2AQBwfiUAAAoWEgVvJwAACioeAigo
AAAKKh4CKCkAAAoqrn4BAAAELR5yvgEAcNADAAACKCoAAApvKwAACnMsAAAKgAEAAAR+AQAABCoa
fgIAAAQqHgKAAgAABCoafgMAAAQqHgIoLQAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAFQEAAAjfgAAwAQAAMQGAAAjU3RyaW5ncwAAAACECwAAMAIA
ACNVUwC0DQAAEAAAACNHVUlEAAAAxA0AALwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEz
ABYAAAEAAAAkAAAABQAAAAYAAAAJAAAAAQAAAC0AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAAB
AAAABAAAAAEAAAABAAAAAADtAwEAAAAAAAYAiwJOBQYAGgNOBQYA1wE7BQ8AwgUAAAYABAJ7BAYA
bgJ7BAYATwJ7BAYAAQN7BAYAqwJ7BAYAxAJ7BAYAGwJ7BAYANgJcAwoA3wKcAwoAVgGcAwYAJQQe
BAYAugE7BQYAXQYeBAYA1ARuBQYAjQRmBA4AigHXAw4A6wHXAw4AcgFRBAYAnwFOBQYAcAYeBAoA
xQOcAxIABAYBARIAxwABAQYAdgMeBA4AHwY7BQ4ApwQ7BQYAuARSAAYAxQRSAAoA5AScAwYAIQEe
BAYA0AAeBAYAtAZ7BAAAAABJAAAAAAABAAEAAQAQADYEAQA5AAEAAQAAABAAdQXRBUUAAQADAAAB
EAAOBtEFWQADAAcAAwEAAC8GAAA9AAQACgARACoEvgARAEYBwgARAKkAxgAGBnsAygBWgBcGzQBW
gCYBzQBQIAAAAACGADwEBgABAIwhAAAAAIYYLgUGAAEAlCEAAAAAgxguBQYAAQCcIQAAAACTCNAE
0QABAMghAAAAAJMILgHWAAEAzyEAAAAAkwg6AdsAAQDXIQAAAACWCGQG4QACAN4hAAAAAIYYLgUG
AAIA5iEAAAAAkRg0BeYAAgAAAAEAVgMJAC4FAQARAC4FBgAZAC4FCgApAC4FEAAxAC4FEAA5AC4F
EABBAC4FEABJAC4FEABRAC4FEABZAC4FEABhAC4FEABpAC4FBgCBAC4FBgCpAC4FFQC5AC4FBgDB
ALkAJABxACcGKQDJAAAGLgDRABUEMwDZAEwDOQDpAC4FBgDpAJkEPQDhAFYGQgDxAPQAEADhAFYG
SADxAD0GEADxADgDUADxAJUGUADxAAoFUADpAHwGVQDpAPgEWQABAYwAXgDpAIIGWQDhAJYAYgDJ
AEsGZwDhAFYGbQDhAL0GdAAJASQFdwAJAUEEgABxAC4FBgCJAC4FBgARAeIAiwARAbAGlACRAC4F
mgCxAC4FBgAIABQAtAAIABgAuQApAHMAIQEuAAsA+QAuABMAAgEuABsAIQEuACMAKgEuACsAUwEu
ADMAUwEuADsAUwEuAEMAKgEuAEsAWQEuAFMAUwEuAFsAcAFDAGMAuQBJAHMAIQFhAHsAuQBjAGsA
uQAbAAMAAQAEAAMAAADUBOoAAABOAe8AAABoBvQAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAA
AAEAAADDInZ6AAAAAAAAJQAAAAQAAAAAAAAAAAAAAKIAgwAAAAAADwAAAAAAAAAAAAAAqwB9AwAA
AAAEAAAAAAAAAAAAAACiAB4EAAAAAA8AAAAAAAAAAAAAAKsAXAAAAAAAAAAAAAEAAAB/BQAABQAC
AAAAAAAAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMAU1RfYzc4YzBiODdmOWE5
NDFlNmIwMjkwNjI2ZDc4MWY5ZTUAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFJlYWRUb0VuZABJc051bGxPcldoaXRlU3Bh
Y2UAZGVmYXVsdEluc3RhbmNlAEdldEVudmlyb25tZW50VmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0ZpbGVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVsbEV4ZWN1dGUAZ2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9jNzhjMGI4N2Y5YTk0
MWU2YjAyOTA2MjZkNzgxZjllNS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1N0YXJ0SW5mbwBQ
cm9jZXNzU3RhcnRJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfU3RhbmRhcmRFcnJvcgBzZXRfUmVkaXJlY3RTdGFu
ZGFyZEVycm9yAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hOTA4ODI3ZWZm
MmM0MzFmYjM0ZjQxNDBmNGJkZmMyMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU1RfYTkwODgyN2VmZjJjNDMxZmIzNGY0MTQwZjRiZGZjMjMuUHJvcGVydGll
cwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAc2V0X0FyZ3VtZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQA
RW52aXJvbm1lbnQAU3RhcnQAZ2V0X1N0YW5kYXJkT3V0cHV0AHNldF9SZWRpcmVjdFN0YW5kYXJk
T3V0cHV0AGdldF9Bc3NlbWJseQBFbXB0eQAAACNQAHIAbwBnAHIAYQBtAEYAaQBsAGUAcwAoAHgA
OAA2ACkAADckAFAAcgBvAGoAZQBjAHQAOgA6AEUAeAB0AGUAcgBuAGEAbABGAGkAbABlAHMAUABh
AHQAaAAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAIDZXABNAGkAYwByAG8AcwBv
AGYAdAAgAFYAaQBzAHUAYQBsACAAUwB0AHUAZABpAG8AXAAyADAAMQA5AFwAQwBvAG0AbQB1AG4A
aQB0AHkAXABDAG8AbQBtAG8AbgA3AFwASQBEAEUAXABDAG8AbQBtAG8AbgBFAHgAdABlAG4AcwBp
AG8AbgBzAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcwB0AFcAaQBuAGQAbwB3AFwAVgBTAFQA
ZQBzAHQALgBDAG8AbgBzAG8AbABlAC4AZQB4AGUAAAMiAABXVABlAHMAdABMAGkAYgByAGEAcgBp
AGUAcwBcAE4AbwByAHQAaAB3AGkAbgBkAEUAVABMAFQAZQBzAHQALgBkAGwAbAAiACAALwBUAGUA
cwB0AHMAOgAAAQAFDQAKAABxUwBUAF8AYQA5ADAAOAA4ADIANwBlAGYAZgAyAGMANAAzADEAZgBi
ADMANABmADQAMQA0ADAAZgA0AGIAZABmAGMAMgAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAA/J7UNbdE7Rbxyw+mD802qAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARFRCAcGDg4ODg4CBAABDg4EIAASZQQgABJpBSABEm0cAyAAHAQgABJ5BQACDg4OBwAEDg4ODg4E
IAEBAgMgAAIEIAASfQMgAA4EAAECDgUgABKAhQYAAw4ODg4CBg4IIAUCCA4ODggKIAYBCA4ODggQ
AggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkD
BhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hOTA4
ODI3ZWZmMmM0MzFmYjM0ZjQxNDBmNGJkZmMyMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFQyAAAAAAAAAAAAAG4yAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAdnrDIgAAAQB2esMiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQAMABm
ADQAYgBkAGYAYwAyADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA4ADkAOQAuADMAMQAzADUAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBjADcAOABjADAAYgA4ADcAZgA5AGEAOQA0ADEAZQA2AGIAMAAyADkAMAA2ADIANgBkADcA
OAAxAGYAOQBlADUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGMANwA4AGMAMABiADgANwBmADkAYQA5ADQAMQBlADYAYgAwADIAOQAwADYA
MgA2AGQANwA4ADEAZgA5AGUANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBhADkAMAA4ADgAMgA3AGUAZgBmADIAYwA0ADMAMQBmAGIAMwA0AGYANAAxADQA
MABmADQAYgBkAGYAYwAyADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAOAA5ADkALgAzADEAMwA1ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAA5ADkALgAzADEAMwA1ADAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAgDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение]"
              DTS:CreationName=""
              DTS:DTSID="{F250EACF-3C69-4A1B-9609-A869722E8180}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-3&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение"
              DTS:To="Package\Test\Incremental load immitation\CustomerSCD2TestStage1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 1]"
              DTS:CreationName=""
              DTS:DTSID="{09A4FA23-822E-40A8-8FE8-BED5C5684777}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-2&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение 1"
              DTS:To="Package\Test\Incremental load immitation\ProductSCD1TestStage1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 2]"
              DTS:CreationName=""
              DTS:DTSID="{0D74E7CD-3FB3-4031-A8E3-3EBBB6840D45}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-3&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение 2"
              DTS:To="Package\Test\Incremental load immitation\ProductSCD1TestStage2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 3]"
              DTS:CreationName=""
              DTS:DTSID="{64A457C3-5788-4B36-B7A8-2B42ED1FFB90}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-2&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение 3"
              DTS:To="Package\Test\Incremental load immitation\EmployeeSCD2TestStage1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 5]"
              DTS:CreationName=""
              DTS:DTSID="{54657E5C-7CB4-4BE6-A68C-7D63B6964CC9}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::var_CutoffTime] == (DT_DATE) &quot;1998-1-3&quot;"
              DTS:From="Package\Test\Incremental load immitation\Incremental load"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Ограничение 5"
              DTS:To="Package\Test\Incremental load immitation\EmployeeSCD2TestStage2" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Test\Ingest data"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Disabled="True"
          DTS:DTSID="{6bfb4787-13b0-42b5-854d-0153e1f6a624}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Ingest data">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Test\Ingest data\Northwind (упрощённая)"
              DTS:CreationName="Microsoft.ExecutePackageTask"
              DTS:DTSID="{bcecefc6-e96f-45e1-9276-b395c79660e6}"
              DTS:ExecutableType="Microsoft.ExecutePackageTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Northwind (упрощённая)"
              DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ExecutePackageTask>
                  <UseProjectReference>True</UseProjectReference>
                  <PackageName>Extract Northwind (упрощённая).dtsx</PackageName>
                </ExecutePackageTask>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Test\Ingest data\xmlcalendar"
              DTS:CreationName="Microsoft.ExecutePackageTask"
              DTS:DTSID="{b0a6c72e-c378-4525-8b43-52eb9c4ad620}"
              DTS:ExecutableType="Microsoft.ExecutePackageTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="xmlcalendar"
              DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ExecutePackageTask>
                  <UseProjectReference>True</UseProjectReference>
                  <PackageName>Extract Xmlcalendar.dtsx</PackageName>
                  <ParameterAssignment>
                    <ParameterName>XMLCalendarFolder</ParameterName>
                    <BindedVariableOrParameterName>$Project::XMLCalendarFolder</BindedVariableOrParameterName>
                  </ParameterAssignment>
                </ExecutePackageTask>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Test\Initial load"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:DTSID="{da917f15-c113-49bc-a556-9a17f9f40087}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initial load"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Initial Load.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>CutoffTime</ParameterName>
                <BindedVariableOrParameterName>User::var_CutoffTime</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>LoadDateInitialEnd</ParameterName>
                <BindedVariableOrParameterName>User::LoadDateInitialEnd</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Test.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{cb102e11-bb3f-4a0c-a9a3-e33ff1b77dd6}"
          DTS:From="Package\Test\Initial load"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Test\Incremental load immitation" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Test.PrecedenceConstraints[Ограничение]"
          DTS:CreationName=""
          DTS:DTSID="{fda0ce84-bc09-4bfa-9169-7778d023e835}"
          DTS:From="Package\Test\Incremental load immitation"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Ограничение"
          DTS:To="Package\Test\Crash and Restore DWH" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Test.PrecedenceConstraints[Ограничение 1]"
          DTS:CreationName=""
          DTS:DTSID="{6ca90a41-dd1b-4d53-81ed-756ca3daaaec}"
          DTS:From="Package\Test\Ingest data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Ограничение 1"
          DTS:To="Package\Test\Initial load" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3B477D3D-A61C-457A-8D80-B8C6CD90799E}"
      DTS:From="Package\Logman Start"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Pre-test" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{18DFC05C-D558-4FBA-BA16-24209C64ED01}"
      DTS:From="Package\Test"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Logman Stop" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B260893C-BE28-4CE6-B80F-9D9FAB7D433D}"
      DTS:From="Package\Pre-test"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Test" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Logman Start"
          TopLeft="601,54.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Logman Stop"
          TopLeft="601.5,1184.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\Pre-test\Clean up backups"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="146,42"
          Id="Package\Pre-test\Clean up logs"
          TopLeft="233,5.49999999999989" />
        <NodeLayout
          Size="193,42"
          Id="Package\Pre-test\Maintence Subsystems"
          TopLeft="439.5,5.49999999999989" />
        <NodeLayout
          Size="118,42"
          Id="Package\Pre-test\PreTest"
          TopLeft="693,5.49999999999989" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="816,103"
          Size="816,146"
          Id="Package\Pre-test"
          TopLeft="265.5,156.5" />
        <NodeLayout
          Size="200,42"
          Id="Package\Test\Crash and Restore DWH"
          TopLeft="560,621.5" />
        <NodeLayout
          Size="212,42"
          Id="Package\Test\Incremental load immitation\CustomerSCD2TestStage1"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Test\Incremental load immitation\EmployeeSCD2TestStage1"
          TopLeft="814.5,107.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Test\Incremental load immitation\EmployeeSCD2TestStage2"
          TopLeft="1089.5,107.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Test\Incremental load immitation\Incremental load"
          TopLeft="572.5,5.5" />
        <NodeLayout
          Size="212,42"
          Id="Package\Test\Incremental load immitation\ProductSCD1TestStage1"
          TopLeft="278.5,107.5" />
        <NodeLayout
          Size="203,42"
          Id="Package\Test\Incremental load immitation\ProductSCD1TestStage2"
          TopLeft="551,107.5" />
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение]"
          TopLeft="601.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-490.333333333333,60"
              Start="0,0"
              End="-490.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.0975609756098" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.0975609756098"
                    Point2="0,16.0975609756098"
                    Point3="-4,16.0975609756098" />
                  <mssgle:LineSegment
                    End="-486.333333333333,16.0975609756098" />
                  <mssgle:CubicBezierSegment
                    Point1="-486.333333333333,16.0975609756098"
                    Point2="-490.333333333333,16.0975609756098"
                    Point3="-490.333333333333,20.0975609756098" />
                  <mssgle:LineSegment
                    End="-490.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-253.166666666667,21.0975609756098,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 1]"
          TopLeft="627.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-242.666666666667,60"
              Start="0,0"
              End="-242.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3564356435643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3564356435643"
                    Point2="0,24.3564356435643"
                    Point3="-4,24.3564356435643" />
                  <mssgle:LineSegment
                    End="-238.666666666667,24.3564356435643" />
                  <mssgle:CubicBezierSegment
                    Point1="-238.666666666667,24.3564356435643"
                    Point2="-242.666666666667,24.3564356435643"
                    Point3="-242.666666666667,28.3564356435643" />
                  <mssgle:LineSegment
                    End="-242.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-129.333333333333,29.3564356435643,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 2]"
          TopLeft="652.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 3]"
          TopLeft="677.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="243.666666666667,59.9999999999999"
              Start="0,0"
              End="243.666666666667,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3564356435643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3564356435643"
                    Point2="0,24.3564356435643"
                    Point3="4,24.3564356435643" />
                  <mssgle:LineSegment
                    End="239.666666666667,24.3564356435643" />
                  <mssgle:CubicBezierSegment
                    Point1="239.666666666667,24.3564356435643"
                    Point2="243.666666666667,24.3564356435643"
                    Point3="243.666666666667,28.3564356435643" />
                  <mssgle:LineSegment
                    End="243.666666666667,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="113.833333333333,29.3564356435643,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Test\Incremental load immitation.PrecedenceConstraints[Ограничение 5]"
          TopLeft="703.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="493.333333333333,59.9999999999999"
              Start="0,0"
              End="493.333333333333,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.0975609756097" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.0975609756097"
                    Point2="0,16.0975609756097"
                    Point3="4,16.0975609756097" />
                  <mssgle:LineSegment
                    End="489.333333333333,16.0975609756097" />
                  <mssgle:CubicBezierSegment
                    Point1="489.333333333333,16.0975609756097"
                    Point2="493.333333333333,16.0975609756097"
                    Point3="493.333333333333,20.0975609756097" />
                  <mssgle:LineSegment
                    End="493.333333333333,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="238.666666666667,21.0975609756097,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1309,205"
          Size="1309,248"
          Id="Package\Test\Incremental load immitation"
          TopLeft="5.5,313.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\Test\Ingest data\Northwind (упрощённая)"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="138,42"
          Id="Package\Test\Ingest data\xmlcalendar"
          TopLeft="268.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="412,103"
          Size="412,146"
          Id="Package\Test\Ingest data"
          TopLeft="454,5.5" />
        <NodeLayout
          Size="129,42"
          Id="Package\Test\Initial load"
          TopLeft="595.5,211.5" />
        <EdgeLayout
          Id="Package\Test.PrecedenceConstraints[Constraint]"
          TopLeft="660,253.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Test.PrecedenceConstraints[Ограничение]"
          TopLeft="660,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Test.PrecedenceConstraints[Ограничение 1]"
          TopLeft="660,151.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1320,719"
          Size="1320,762"
          Id="Package\Test"
          TopLeft="13.5000000000001,362.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="673.5,96.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="673.5,1124.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="673.5,302.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>